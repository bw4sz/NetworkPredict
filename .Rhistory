int<-read.csv("InputData/HummingbirdInteractions.csv")
int$timestamp<-as.POSIXct(paste(int$Time,int$DateP),format="%H:%M:%S %Y-%m-%d")
int[int$DateP %in% '2013-07-25',"Month"]<-7
int<-int[!(int$ID %in% "FH1108" & int$Date_F %in% '2014-12-01'),]
int[int$Iplant_Double %in% "Onagaraceae fuschia","Iplant_Double"]<-"Fuchsia macrostigma"
int[int$Iplant_Double=="Alloplectus purpureus","Iplant_Double"]<-"Glossoloma purpureum"
int[int$Iplant_Double=="Capanea affinis","Iplant_Double"]<-"Kohleria affinis"
int[int$Iplant_Double=="Columnea cinerea","Iplant_Double"]<-"Columnea mastersonii"
int[int$Iplant_Double=="Alloplectus teuscheri","Iplant_Double"]<-"Drymonia teuscheri"
int[int$Iplant_Double=="Drymonia collegarum","Iplant_Double"]<-"Alloplectus tetragonoides"
keep<-names(which(table(int$Hummingbird) > 10))
int<-int[int$Hummingbird %in% keep & !int$Hummingbird %in% c("Sparkling Violetear"),]
m.dat<-droplevels(int[colnames(int) %in% c("ID","Video","Time","Hummingbird","Sex","timestamp","TransectID","Transect_R","Iplant_Double","Pierce","DateP","Month","ele","Type")])
m.dat$Type<-(is.na(m.dat$TransectID))*1
m.dat$Year<-years(as.Date(m.dat$DateP))
m.dat$Year[m.dat$Year %in% 2012]<-2013
m.dat$Year[m.dat$Year %in% 2106]<-2016
h_species<-nlevels(m.dat$Hummingbird)
dath<-merge(m.dat,hum.morph, by.x="Hummingbird",by.y="English",keep=all)
plant_species<-nlevels(m.dat$Iplant_Double)
int.FLlevels<-levels(factor(dath$Iplant_Double))
missingTraits<-int.FLlevels[!int.FLlevels %in% fl.morph$X]
g<-dath[!is.na(dath$ID),]
head(g)
g$Iplant_Double
table(g$Iplant_Double)
levels(g$Iplant_Double)
g
dim(g)
data.frame(g)
data.frame(g)$Iplant_Double
table(data.frame(g)$Iplant_Double)
fl.morph<-read.csv("InputData/FlowerMorphology.csv")
fl.morph$Corolla<-fl.morph$EffectiveCorolla
fl.morph[is.na(fl.morph$Corolla),"Corolla"]<-fl.morph[is.na(fl.morph$Corolla),"TotalCorolla"]
fl.morph<-fl.morph[-1,]
hum.morph<-read.csv("InputData/HummingbirdMorphology.csv")
hum.morph$English<-as.character(hum.morph$English)
hum.morph$English[hum.morph$English %in% "Green-crowned Woodnymph"]<-"Crowned Woodnymph"
int<-read.csv("InputData/HummingbirdInteractions.csv")
int$timestamp<-as.POSIXct(paste(int$Time,int$DateP),format="%H:%M:%S %Y-%m-%d")
int[int$DateP %in% '2013-07-25',"Month"]<-7
int<-int[!(int$ID %in% "FH1108" & int$Date_F %in% '2014-12-01'),]
int[int$Iplant_Double %in% "Onagaraceae fuschia","Iplant_Double"]<-"Fuchsia macrostigma"
int[int$Iplant_Double=="Alloplectus purpureus","Iplant_Double"]<-"Glossoloma purpureum"
int[int$Iplant_Double=="Capanea affinis","Iplant_Double"]<-"Kohleria affinis"
int[int$Iplant_Double=="Columnea cinerea","Iplant_Double"]<-"Columnea mastersonii"
int[int$Iplant_Double=="Alloplectus teuscheri","Iplant_Double"]<-"Drymonia teuscheri"
int[int$Iplant_Double=="Drymonia collegarum","Iplant_Double"]<-"Alloplectus tetragonoides"
keep<-names(which(table(int$Hummingbird) > 10))
int<-int[int$Hummingbird %in% keep & !int$Hummingbird %in% c("Sparkling Violetear"),]
m.dat<-droplevels(int[colnames(int) %in% c("ID","Video","Time","Hummingbird","Sex","timestamp","TransectID","Transect_R","Iplant_Double","Pierce","DateP","Month","ele","Type")])
m.dat$Type<-(is.na(m.dat$TransectID))*1
m.dat$Year<-years(as.Date(m.dat$DateP))
m.dat$Year[m.dat$Year %in% 2012]<-2013
m.dat$Year[m.dat$Year %in% 2106]<-2016
h_species<-nlevels(m.dat$Hummingbird)
plant_species<-nlevels(m.dat$Iplant_Double)
dath<-merge(m.dat,hum.morph, by.x="Hummingbird",by.y="English",keep=all)
dath
dath$Iplant_Double
table(dath$Iplant_Double)
as.character(dath$Iplant_Double)
library(reshape2)
library(chron)
library(ggplot2)
library(knitr)
library(R2jags)
library(dplyr)
library(stringr)
library(gridExtra)
library(boot)
library(bipartite)
library(VennDiagram)
opts_chunk$set(message=FALSE,warning=FALSE,fig.width=10,fig.height=7,echo=TRUE,cache=F,fig.align='center',fig.path="figureObserved/")
set.seed(3)
library(reshape2)
library(chron)
library(ggplot2)
library(knitr)
library(R2jags)
library(dplyr)
library(stringr)
library(gridExtra)
library(boot)
library(bipartite)
library(VennDiagram)
opts_chunk$set(message=FALSE,warning=FALSE,fig.width=10,fig.height=7,echo=TRUE,cache=F,fig.align='center',fig.path="figureObserved/")
set.seed(3)
fl.morph<-read.csv("InputData/FlowerMorphology.csv")
fl.morph$Corolla<-fl.morph$EffectiveCorolla
fl.morph[is.na(fl.morph$Corolla),"Corolla"]<-fl.morph[is.na(fl.morph$Corolla),"TotalCorolla"]
fl.morph<-fl.morph[-1,]
hum.morph<-read.csv("InputData/HummingbirdMorphology.csv")
hum.morph$English<-as.character(hum.morph$English)
hum.morph$English[hum.morph$English %in% "Green-crowned Woodnymph"]<-"Crowned Woodnymph"
int<-read.csv("InputData/HummingbirdInteractions.csv")
int$timestamp<-as.POSIXct(paste(int$Time,int$DateP),format="%H:%M:%S %Y-%m-%d")
int[int$DateP %in% '2013-07-25',"Month"]<-7
int<-int[!(int$ID %in% "FH1108" & int$Date_F %in% '2014-12-01'),]
int[int$Iplant_Double %in% "Onagaraceae fuschia","Iplant_Double"]<-"Fuchsia macrostigma"
int[int$Iplant_Double=="Alloplectus purpureus","Iplant_Double"]<-"Glossoloma purpureum"
int[int$Iplant_Double=="Capanea affinis","Iplant_Double"]<-"Kohleria affinis"
int[int$Iplant_Double=="Columnea cinerea","Iplant_Double"]<-"Columnea mastersonii"
int[int$Iplant_Double=="Alloplectus teuscheri","Iplant_Double"]<-"Drymonia teuscheri"
int[int$Iplant_Double=="Drymonia collegarum","Iplant_Double"]<-"Alloplectus tetragonoides"
keep<-names(which(table(int$Hummingbird) > 10))
int<-int[int$Hummingbird %in% keep & !int$Hummingbird %in% c("Sparkling Violetear"),]
m.dat<-droplevels(int[colnames(int) %in% c("ID","Video","Time","Hummingbird","Sex","timestamp","TransectID","Transect_R","Iplant_Double","Pierce","DateP","Month","ele","Type")])
m.dat$Type<-(is.na(m.dat$TransectID))*1
m.dat$Year<-years(as.Date(m.dat$DateP))
m.dat$Year[m.dat$Year %in% 2012]<-2013
m.dat$Year[m.dat$Year %in% 2106]<-2016
h_species<-nlevels(m.dat$Hummingbird)
plant_species<-nlevels(m.dat$Iplant_Double)
dath<-merge(m.dat,hum.morph, by.x="Hummingbird",by.y="English",keep=all)
int.FLlevels<-levels(factor(dath$Iplant_Double))
dim(dath)
dath$Iplant_Double
table(dath$Iplant_Double)
table(dath$Iplant_Double)
g<-dath[!is.na(dath$ID),]
f<-anti_join(g,fl.morph, by=c("Iplant_Double"="X"))
dim(g)
dim(f)
190/1876
j<-sort(table(f$Iplant_Double))
j
j<-j[!j==0]
j<-names(j)
names(sort(table(g$Iplant_Double),decreasing=T))
a<-names(sort(table(g$Iplant_Double),decreasing=T))
sort(sapply(j,function(x) which(a %in% x)))
fl.morph
levels(g$Iplant_Double)
levels(droplevels(g$Iplant_Double))
f
dim(g)
dath<-merge(dath,fl.morph, by.x="Iplant_Double",by.y="X")
dim(dath)
#read in flower morphology data, comes from Nectar.R
fl.morph<-read.csv("InputData/FlowerMorphology.csv")
#use effective corolla where possible.
fl.morph$Corolla<-fl.morph$EffectiveCorolla
fl.morph[is.na(fl.morph$Corolla),"Corolla"]<-fl.morph[is.na(fl.morph$Corolla),"TotalCorolla"]
#fuchsia macrostigma has an undue influence on this analysis, being 3x longer than other flowers, its not clear that birds really have to reach down the full corolla lenghth, use effective corolla length.
#fl.morph[fl.morph$Group.1 %in% "Fuchsia macrostigma","Corolla"]<-50
#First row is empty
fl.morph<-fl.morph[-1,]
#Bring in Hummingbird Morphology Dataset, comes from
hum.morph<-read.csv("InputData/HummingbirdMorphology.csv")
#taxonomy change, we are calling them Crowned Woodnymph's now.
hum.morph$English<-as.character(hum.morph$English)
hum.morph$English[hum.morph$English %in% "Green-crowned Woodnymph"]<-"Crowned Woodnymph"
#Bring in Interaction Matrix
int<-read.csv("InputData/HummingbirdInteractions.csv")
int$timestamp<-as.POSIXct(paste(int$Time,int$DateP),format="%H:%M:%S %Y-%m-%d")
#one date error
int[int$DateP %in% '2013-07-25',"Month"]<-7
#one duplicate camera error, perhaps two GPS records.
int<-int[!(int$ID %in% "FH1108" & int$Date_F %in% '2014-12-01'),]
#Correct known taxonomic disagreements, atleast compared to traits
int[int$Iplant_Double %in% "Onagaraceae fuschia","Iplant_Double"]<-"Fuchsia macrostigma"
int[int$Iplant_Double=="Alloplectus purpureus","Iplant_Double"]<-"Glossoloma purpureum"
int[int$Iplant_Double=="Capanea affinis","Iplant_Double"]<-"Kohleria affinis"
int[int$Iplant_Double=="Columnea cinerea","Iplant_Double"]<-"Columnea mastersonii"
int[int$Iplant_Double=="Alloplectus teuscheri","Iplant_Double"]<-"Drymonia teuscheri"
int[int$Iplant_Double=="Drymonia collegarum","Iplant_Double"]<-"Alloplectus tetragonoides"
#Some reasonable level of presences, 10 points
keep<-names(which(table(int$Hummingbird) > 10))
int<-int[int$Hummingbird %in% keep & !int$Hummingbird %in% c("Sparkling Violetear"),]
m.dat<-droplevels(int[colnames(int) %in% c("ID","Video","Time","Hummingbird","Sex","timestamp","TransectID","Transect_R","Iplant_Double","Pierce","DateP","Month","ele","Type")])
#Does the data come from camera or transect?
m.dat$Type<-(is.na(m.dat$TransectID))*1
m.dat$Year<-years(as.Date(m.dat$DateP))
#one missing date
m.dat$Year[m.dat$Year %in% 2012]<-2013
m.dat$Year[m.dat$Year %in% 2106]<-2016
#Number of bird species
h_species<-nlevels(m.dat$Hummingbird)
#Number of plant species
plant_species<-nlevels(m.dat$Iplant_Double)
#Get english name
dath<-merge(m.dat,hum.morph, by.x="Hummingbird",by.y="English",keep=all)
#Merge to flowers
int.FLlevels<-levels(factor(dath$Iplant_Double))
#Which flowers are we missing info for?
missingTraits<-int.FLlevels[!int.FLlevels %in% fl.morph$X]
#print(paste("Missing Trait Information:",missingTraits))
dath<-merge(dath,fl.morph, by.x="Iplant_Double",by.y="X")
#Drop piercing events, since they don't represent correlation
#dath<-dath[!dath$Pierce %in% c("y","Y"),]
dim(dath)
#observed traitmatching
traitmatchF<-abs(t(sapply(hum.morph$Bill,function(x){x-fl.morph$Corolla})))
rownames(traitmatchF)<-hum.morph$English
colnames(traitmatchF)<-fl.morph$Group.1
#match names #Round to 2 decimals #Convert to cm for winbugs, avoids numerical underflow
traitmatchT<-round(traitmatchF[rownames(traitmatchF) %in% dath$Hummingbird,colnames(traitmatchF) %in% dath$Iplant_Double],2)
traitmatchT<-traitmatchT[sort(rownames(traitmatchT)),sort(colnames(traitmatchT))]
elevH<-read.csv("InputData/HummingbirdElevation.csv",row.names=1)
head(elevH)
colnames(elevH)[5]<-"Elevation"
elevH$Bird<-1:nrow(elevH)
#high elevation or low elevation
elevP<-read.csv("InputData/PlantElevation.csv",row.names=1)
colnames(elevP)[5]<-"Elevation"
elevP$Plant<-1:nrow(elevP)
elevP$Iplant_Double<-as.character(elevP$Iplant_Double)
#Merge to observed Data
#plants
dathp<-merge(dath,elevP,by="Iplant_Double")
#birds
datph<-merge(dathp,elevH,by="Hummingbird")
#cut working best on data.frame
datph<-as.data.frame(datph)
#which elevation bin is each observation within
labs<-paste(seq(1300,2500,200),seq(1500,2700,200),sep="_")
#for the couple points that have 1290 elevation, round up to 300 for convienance
datph$ele[datph$ele < 1300]<-1301
datph$ele<-as.numeric(datph$ele)
datph$Transect_R[is.na(datph$Transect_R)]<-as.character(cut(datph[is.na(datph$Transect_R),]$ele,seq(1300,2700,200),labels=labs))
#Elev for the transects is the midpoint
tran_elev<-datph[datph$Survey_Type=='Transect',"Transect_R"]
datph[datph$Survey_Type=='Transect',"ele"]<-sapply(tran_elev,function(x){
mean(as.numeric(str_split(x,"_")[[1]]))
})
#ID for NA is holger transects, make the id's 1:n for each day of transect at each elevation, assuming no elevation was split across days.
datph$ID<-as.character(datph$ID)
noid<-datph[is.na(datph$ID),]
id_topaste<-paste(noid$Month,noid$Year,"Transect",sep="_")
datph[which(is.na(datph$ID)),"ID"]<-id_topaste
#Create year month combination
datph$Time<-paste(datph$Month,datph$Year,sep="_")
#Label survey type
datph$Survey_Type<-NA
mt<-!is.na(datph$TransectID)*1
datph$Survey_Type[mt==1]<-"Transect"
datph$Survey_Type[!datph$Survey_Type %in% "Transect"]<-"Camera"
datph<-datph[datph$Survey_Type=="Camera",]
#time filter
#sort by timestamp
datph<-datph[order(datph$timestamp),]
dotime<-function(d){
d$Timediff<-NA
if(nrow(d)>1){
for (x in 2:nrow(d)){
d$Timediff[x]<-difftime(d$timestamp[x],d$timestamp[x-1],units="mins")
}
}
return(d)
}
datph<-datph %>% group_by(ID,Hummingbird) %>% do(dotime(.))
#eliminate interaction by the same species within five minutes
datph<-datph[!1:nrow(datph) %in% which(datph$Timediff<5),]
#Day level
#add day ID
sdat<-split(datph,list(datph$ID),drop = T)
sdat<-lapply(sdat,function(x){
x<-droplevels(x)
x$Day<-as.numeric(as.factor(x$DateP))
return(x)
})
indatraw<-rbind_all(sdat)
#Species names
for (x in 1:nrow(indatraw)){
indatraw$Hummingbird[x]<-as.character(elevH[elevH$Bird %in% indatraw$Bird[x],"Hummingbird"])
indatraw$Iplant_Double[x]<-as.character(elevP[elevP$Plant %in% indatraw$Plant[x],"Iplant_Double"])
}
#match the traits
traitmelt<-melt(traitmatchT)
colnames(traitmelt)<-c("Hummingbird","Iplant_Double","Traitmatch")
#dummy presence variable
indatraw$Yobs<-1
#prune columsn to make more readable
indatraw<-indatraw[,c("Hummingbird","Iplant_Double","ID","Time","Month","Year","Transect_R","ele","DateP","Yobs","Day","Survey_Type","Pierce")]
indatraw$Yobs
sum(indatraw$Yobs)
indatraw$Iplant_Double
droplevels(indatraw$Iplant_Double)
unique(indatraw$Iplant_Double)
haed(f)
head(f)
lengh(droplevels(f$Iplant_Double))
lengyh(droplevels(f$Iplant_Double))
length(droplevels(f$Iplant_Double))
length(unique(droplevels(f$Iplant_Double)))
length(unique(droplevels(g$Iplant_Double)))
length(unique(droplevels(indatraw$Iplant_Double)))
length(unique(indatraw$Iplant_Double))
b<-unique(indatraw$Iplant_Double)
head(a)
b[!b %in% a]
a[!a %in% b]
a[!a %in% b]
a<-dath$Iplant_Double
a<-unique(g$Iplant_Double)
a[!a %in% b]
library(reshape2)
library(chron)
library(ggplot2)
library(knitr)
library(R2jags)
library(dplyr)
library(stringr)
library(gridExtra)
library(boot)
library(bipartite)
library(lme4)
opts_chunk$set(message=FALSE,warning=FALSE,fig.width=10,fig.height=7,echo=TRUE,cache=F,fig.align='center',fig.path="figureObserved/")
#new model update
newModel<-T
load("ObservedModel.RData")
write.csv(indat,"OutData/EL_dat.csv")
head(indat)
loic<-merge(indat,fl.morph)
dim(indat)
dim(loic)
loic<-merge(indat,fl.morph,by="Iplant_Double")
head(indat)
head(fl.morph)
loic<-merge(indat,fl.morph,by.x="Iplant_Double",by.y="Group.1")
dim(loic)
loic<-merge(loic,hum.morph,by.x="Hummingbird",by.y="Hummingbird")
head(hum.morph)
loic<-merge(loic,hum.morph,by.x="Hummingbird",by.y="English")
head(loic)
dim(loic)
write.csv(indat,"OutData/EL_dat.csv")
write.csv(indat,"OutData/EL_dat.csv")
write.csv(loic,"OutData/EL_dat.csv")
library(reshape2)
library(chron)
library(ggplot2)
library(knitr)
library(R2jags)
library(dplyr)
library(stringr)
library(gridExtra)
library(boot)
library(bipartite)
library(lme4)
opts_chunk$set(message=FALSE,warning=FALSE,fig.width=10,fig.height=7,echo=TRUE,cache=F,fig.align='center',fig.path="figureObserved/")
#new model update
newModel<-T
load("ObservedModel.RData")
indatraw %>% head
indatraw %>% head
indat %>% head
indat %>% mutate(f=Traitmatch*Yobs) %>% arrange(desc(f))
indat %>% mutate(f=Traitmatch*Yobs) %>% arrange(desc(f)) %>% select(Iplant_Double,Hummingbird,Yobs, Traitmatch)
fl.morph$Group.1
fl.morph$Group.1 %in% "Heliconia virganlis"
fl.morph$Group.1 %in% "Heliconia virginalis"
fl.morph[fl.morph$Group.1 %in% "Heliconia virginalis",]
indat %>% mutate(f=Traitmatch*Yobs) %>% arrange(desc(f)) %>% select(Iplant_Double,Hummingbird,Yobs, Traitmatch)
indat %>% mutate(f=Traitmatch*Yobs) %>% arrange(desc(f)) %>% select(Iplant_Double,Hummingbird,Yobs, Traitmatch,f)
indat %>% group_by(Hummingbird,Iplant_Double) %>% summarize(sum(Yobs)) %>% mutate(f=Traitmatch*Yobs) %>% arrange(desc(f)) %>% select(Iplant_Double,Hummingbird,Yobs, Traitmatch,f)
indat %>% group_by(Hummingbird,Iplant_Double) %>% summarize(s=sum(Yobs),Traitmatch=unique(Traitmatch)) %>% mutate(f=Traitmatch*s) %>% arrange(desc(f)) %>% select(Iplant_Double,Hummingbird,Yobs, Traitmatch,f)
indat %>% group_by(Hummingbird,Iplant_Double) %>% summarize(s=sum(Yobs),Traitmatch=unique(Traitmatch)) %>% mutate(f=Traitmatch*s) %>% arrange(desc(f))
indat %>% group_by(Hummingbird,Iplant_Double) %>% summarize(s=sum(Yobs),Traitmatch=unique(Traitmatch)) %>% mutate(f=Traitmatch*s) %>% ungroup() %>% arrange(desc(f))
indat %>% group_by(Hummingbird,Iplant_Double) %>% summarize(s=sum(Yobs),Traitmatch=unique(Traitmatch)) %>% mutate(f=Traitmatch*s) %>% ungroup() %>% arrange(desc(f)) %>% as.data.frame()
fl.morph %>%
fl.morph
fl.morph$Group.1
fl.morph$Group.1 %in% "Psammisia aberrans"
fl.morph[fl.morph$Group.1 %in% "Psammisia aberrans",]
hum.morph
hum.morph[hum.morph$English %in% "White-whiskered Hermit"]
hum.morph[hum.morph$English %in% "White-whiskered Hermit",]
fl.morph[fl.morph$Group.1 %in% "Psammisia aberrans",]
indat %>% group_by(Hummingbird,Iplant_Double) %>% summarize(s=sum(Yobs),Traitmatch=unique(Traitmatch)) %>% mutate(f=Traitmatch*s) %>% ungroup() %>% arrange(desc(f)) %>% as.data.frame()
indat %>% group_by(Hummingbird,Iplant_Double)
indat %>% group_by(Hummingbird,Iplant_Double) %>% summarize(Pierce %in% c("y,Y"))
indat %>% group_by(Hummingbird,Iplant_Double) %>% summarize(Pierce %in% c("y,Y"))
indat %>% group_by(Hummingbird,Iplant_Double) %>% summarize(dathp %in% c("y,Y"))
head(dath)
head(dathp)
head(indatraw)
dathp %>% select(Hummingbird,Iplant_Double,ID,Day,Yobs,Month,Year,Transect_R,ele,DateP)
dathp %>% select(Hummingbird,Iplant_Double,ID,Yobs,Month,Year,Transect_R,ele,DateP)
dathp %>% select(Hummingbird,Iplant_Double,ID,Month,Year,Transect_R,ele,DateP)
dathp %>% select(Hummingbird,Iplant_Double,ID,Month,Year,Transect_R,ele,DateP,Pierce) %>% filter(Pierce %in% c("y","Y"))
pierce<-dathp %>% select(Hummingbird,Iplant_Double,ID,Month,Year,Transect_R,ele,DateP,Pierce) %>% filter(Pierce %in% c("y","Y"))
pierce
head(flower.month)
merge(pierce,flower.month,by=c("Month","Year","Transect_R")
pier<-merge(pierce,flower.month,by=c("Month","Year","Transect_R"))
dim(pier)
head(pirce)
head(pierce)
head(datph)
head(datph$Type)
table(datph$Type)
pierce<-datph %>% select(Hummingbird,Iplant_Double,ID,Month,Year,Transect_R,ele,DateP,Pierce) %>% filter(Pierce %in% c("y","Y"))
pier<-merge(pierce,flower.month,by=c("Month","Year","Transect_R"))
dim(pier)
head(pier)
pier %>% group_by(Hummingbird,R) %>% (Yobs=n())
pier %>% group_by(Hummingbird,R) %>% summarzie(Yobs=n())
pier %>% group_by(Hummingbird,R) %>% summarize(Yobs=n())
hpier<-pier %>% group_by(Hummingbird,R) %>% summarize(Yobs=n())
ggplot(hpier,aes(x=Hummingbird,y=Yobs,col=R)) + geom_point() + ggtitle("Piercing")
ggplot(hpier,aes(x=Hummingbird,y=Yobs,col=R)) + geom_point() + ggtitle("Piercing") + coord_flip()
hpier %>% filter(!Hummingbird == "White-whiskered Hermit")
ggplot(hpier,aes(x=Hummingbird,y=Yobs,col=R)) + geom_point() + ggtitle("Piercing") + coord_flip()
hpier<-hpier %>% filter(!Hummingbird == "White-whiskered Hermit")
ggplot(hpier,aes(x=Hummingbird,y=Yobs,col=R)) + geom_point() + ggtitle("Piercing") + coord_flip() + theme_bw()
ggplot(hpier,aes(x=Hummingbird,y=Yobs,col=R)) + geom_point()  + coord_flip() + theme_bw() + labs("Observed piercing events",col="Resource Period")
ggplot(hpier,aes(x=Hummingbird,y=Yobs,col=R)) + geom_point(size=2)  + coord_flip() + theme_bw() + labs("Observed piercing events",col="Resource Period")
ggplot(hpier,aes(x=Hummingbird,y=Yobs,col=R)) + geom_point(size=3)  + coord_flip() + theme_bw() + labs("Observed piercing events",col="Resource Period")
ggplot(hpier,aes(x=Hummingbird,y=Yobs,col=R)) + geom_point(size=3)  + coord_flip() + theme_bw() + labs(x="Observed piercing events",col="Resource Period")
ggplot(hpier,aes(x=Hummingbird,y=Yobs,col=R)) + geom_point(size=3)  + coord_flip() + theme_bw() + labs(y="Observed piercing events",col="Resource Period")
ggsave("Figures/Piercing.jpeg",height=4,width=4)
hpier %>% filter("Stripe-throated Hermit")
hpier %>% filter(Hummingbird %in% "Stripe-throated Hermit")
ggsave("Figures/Piercing.jpeg",height=4,width=6)
library(reshape2)
library(chron)
library(ggplot2)
library(knitr)
library(R2jags)
library(dplyr)
library(stringr)
library(gridExtra)
library(boot)
library(bipartite)
library(lme4)
opts_chunk$set(message=FALSE,warning=FALSE,fig.width=10,fig.height=7,echo=TRUE,cache=F,fig.align='center',fig.path="figureObserved/")
#new model update
newModel<-T
load("ObservedModel.RData")
ggplot(data=spe,aes(x=trait)) + geom_ribbon(aes(ymin=lower,ymax=upper,fill=resources),alpha=0.5) + geom_line(aes(y=mean,group=resources),size=.5) + theme_bw() + ylab("Daily Interaction Rate")+ xlab("Difference between Bill and Corolla Length (mm)") + facet_wrap(~Hummingbird,scales="free",ncol=4) + geom_point(data=indat,aes(x=Traitmatch,y=Yobs),size=1.2) + scale_fill_manual("Resource Availability",values=c("Grey70","Grey40","Black"))
ggplot(data=spe,aes(x=trait)) + geom_ribbon(aes(ymin=lower,ymax=upper,fill=resources),alpha=0.5) + geom_line(aes(y=mean,group=resources),size=.5) + theme_bw() + ylab("Daily Interaction Rate")+ xlab("Difference between Bill and Corolla Length (mm)") + facet_wrap(~Hummingbird,scales="free",ncol=3) + geom_point(data=indat,aes(x=Traitmatch,y=Yobs),size=1.2) + scale_fill_manual("Resource/nAvailability",values=c("Grey70","Grey40","Black"))
ggplot(data=spe,aes(x=trait)) + geom_ribbon(aes(ymin=lower,ymax=upper,fill=resources),alpha=0.5) + geom_line(aes(y=mean,group=resources),size=.5) + theme_bw() + ylab("Daily Interaction Rate")+ xlab("Difference between Bill and Corolla Length (mm)") + facet_wrap(~Hummingbird,scales="free",ncol=3) + geom_point(data=indat,aes(x=Traitmatch,y=Yobs),size=1.2) + scale_fill_manual("Resource /n Availability",values=c("Grey70","Grey40","Black"))
ggplot(data=spe,aes(x=trait)) + geom_ribbon(aes(ymin=lower,ymax=upper,fill=resources),alpha=0.5) + geom_line(aes(y=mean,group=resources),size=.5) + theme_bw() + ylab("Daily Interaction Rate")+ xlab("Difference between Bill and Corolla Length (mm)") + facet_wrap(~Hummingbird,scales="free",ncol=3) + geom_point(data=indat,aes(x=Traitmatch,y=Yobs),size=1.2) + scale_fill_manual("Resource \n Availability",values=c("Grey70","Grey40","Black"))
ggplot(data=spe,aes(x=trait)) + geom_ribbon(aes(ymin=lower,ymax=upper,fill=resources),alpha=0.5) + geom_line(aes(y=mean,group=resources),size=.5) + theme_bw() + ylab("Daily Interaction Rate")+ xlab("Difference between Bill and Corolla Length (mm)") + facet_wrap(~Hummingbird,scales="free",ncol=3) + geom_point(data=indat,aes(x=Traitmatch,y=Yobs),size=1.2) + scale_fill_manual("Resource \nAvailability",values=c("Grey70","Grey40","Black"))
ggsave("Figures/SpeciesRegression.jpeg",height=10,width=10)
ggsave("Figures/SpeciesRegression.jpeg",height=12,width=10)
ggsave("Figures/SpeciesRegression.jpeg",height=11,width=10)
library(reshape2)
library(chron)
library(ggplot2)
library(knitr)
library(R2jags)
library(dplyr)
library(stringr)
library(gridExtra)
library(boot)
library(bipartite)
library(lme4)
opts_chunk$set(message=FALSE,warning=FALSE,fig.width=10,fig.height=7,echo=TRUE,cache=F,fig.align='center',fig.path="figureObserved/")
#new model update
newModel<-T
load("ObservedModel.RData")
pierce<-datph %>% select(Hummingbird,Iplant_Double,ID,Month,Year,Transect_R,ele,DateP,Pierce) %>% filter(Pierce %in% c("y","Y"))
pier<-merge(pierce,flower.month,by=c("Month","Year","Transect_R"))
hpier<-pier %>% group_by(Hummingbird,R) %>% summarize(Yobs=n())
#those white-whiskered hermit observations have been invalidated, they aren't feeding.
hpier<-hpier %>% filter(!Hummingbird == "White-whiskered Hermit")
ggplot(hpier,aes(x=Hummingbird,y=Yobs,col=R)) + geom_point(size=3)  + coord_flip() + theme_bw() + labs(y="Observed piercing events",col="Resource Availability")
ggsave("Figures/Piercing.jpeg",height=4,width=6)
library(reshape2)
library(chron)
library(ggplot2)
library(knitr)
library(R2jags)
library(dplyr)
library(stringr)
library(gridExtra)
library(boot)
library(bipartite)
library(lme4)
opts_chunk$set(message=FALSE,warning=FALSE,fig.width=10,fig.height=7,echo=TRUE,cache=F,fig.align='center',fig.path="figureObserved/")
#new model update
newModel<-T
load("ObservedModel.RData")
head(fll)
fll$R
fll$R<-factor(fll$R,levels=rev(levels(fll$R)))
ggplot(fll,aes(x=Corolla,fill=R)) + geom_density(alpha=0.8) + scale_fill_manual(labels=c("Low","Medium","High"),values=c("grey90","Grey40","Black")) + labs(fill="Resource Availability") + theme_bw() + labs(x="Corolla Length (mm)") + facet_wrap(~Transect_R,scales="free")
ggplot(fll,aes(x=Corolla,fill=R)) + geom_density(alpha=0.8) + scale_fill_manual(labels=c("Low","Medium","High"),values=c("grey90","Grey40","Black")) + labs(fill="Resource\nAvailability") + theme_bw() + labs(x="Corolla Length (mm)") + facet_wrap(~Transect_R,scales="free") + aes(group=rev(fll$R))
ggplot(fll,aes(x=Corolla,fill=R)) + geom_density(alpha=0.8) + scale_fill_manual(labels=c("Low","Medium","High"),values=c("grey90","Grey40","Black")) + labs(fill="Resource\nAvailability") + theme_bw() + labs(x="Corolla Length (mm)") + facet_wrap(~Transect_R,scales="free") + aes(group=rev(R))
ggplot(fll,aes(x=Corolla,fill=R)) + geom_density(alpha=0.8) + scale_fill_manual(labels=c("Low","Medium","High"),values=c("grey90","Grey40","Black")) + labs(fill="Resource\nAvailability") + theme_bw() + labs(x="Corolla Length (mm)") + facet_wrap(~Transect_R,scales="free") + aes(fill=rev(R))
fll$R<-factor(fll$R,levels=rev(levels(fll$R)))
ggplot(fll,aes(x=Corolla,fill=R)) + geom_density(alpha=0.8) + scale_fill_manual(labels=c("Low","Medium","High"),values=c("grey90","Grey40","Black")) + labs(fill="Resource\nAvailability") + theme_bw() + labs(x="Corolla Length (mm)") + facet_wrap(~Transect_R,scales="free") + aes(fill=rev(R))
ggplot(fll,aes(x=Corolla,fill=R)) + geom_density(alpha=0.8) + scale_fill_manual(labels=c("High","Medium","Low"),values=c("Black","Grey40","grey90")) + labs(fill="Resource\nAvailability") + theme_bw() + labs(x="Corolla Length (mm)") + facet_wrap(~Transect_R,scales="free") + aes(fill=rev(R))
load("Observed.RData")
ggplot(fll,aes(x=Corolla,fill=R)) + geom_density(alpha=0.8) + scale_fill_manual(labels=c("High","Medium","Low"),values=c("Black","Grey40","grey90")) + labs(fill="Resource\nAvailability") + theme_bw() + labs(x="Corolla Length (mm)") + facet_wrap(~Transect_R,scales="free") + aes(fill=rev(R))
ggplot(fll,aes(x=Corolla,fill=R)) + geom_density(alpha=0.8) + scale_fill_manual(labels=c("High","Medium","Low"),values=c("Black","Grey40","grey90")) + labs(fill="Resource\nAvailability") + theme_bw() + labs(x="Corolla Length (mm)") + facet_wrap(~Transect_R,scales="free")
levels(fll$Transect_R)<-c("1300m - 1500m", "1500m - 1700m","1700m - 1900m","1900m - 2100m","2100m - 2300m","2300m - 2500m")
ggplot(fll,aes(x=Corolla,fill=R)) + geom_density(alpha=0.8) + scale_fill_manual(labels=c("High","Medium","Low"),values=c("Black","Grey40","grey90")) + labs(fill="Resource\nAvailability") + theme_bw() + labs(x="Corolla Length (mm)") + facet_wrap(~Transect_R,scales="free")
ggsave("Figures/TraitDensity.svg",height=4,width=8,dpi=500)
ggsave("Figures/TraitDensity.svg",height=4,width=8,dpi=500)
ggsave("Figures/TraitDensity.svg",height=5,width=7,dpi=500)
ggsave("Figures/TraitDensity.svg",height=5,width=7,dpi=500)
ggsave("Figures/TraitDensity.svg",height=5,width=10,dpi=300)
library(reshape2)
library(chron)
library(ggplot2)
library(knitr)
library(R2jags)
library(dplyr)
library(stringr)
library(gridExtra)
library(boot)
library(bipartite)
library(VennDiagram)
opts_chunk$set(message=FALSE,warning=FALSE,fig.width=10,fig.height=7,echo=TRUE,cache=F,fig.align='center',fig.path="figureObserved/")
set.seed(3)
paste("Run Completed at",Sys.time())
load("ObservedModel.RData")
