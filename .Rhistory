indat %>% group_by(ID) %>% summarize(n=length(unique(Day))) %>% mutate(sum(.$n))
498*12
library(reshape2)
library(chron)
library(ggplot2)
library(knitr)
library(R2jags)
library(dplyr)
library(stringr)
library(gridExtra)
library(boot)
library(bipartite)
library(lme4)
opts_chunk$set(message=FALSE,warning=FALSE,fig.width=10,fig.height=7,echo=TRUE,cache=F,fig.align='center',fig.path="figureObserved/")
#new model update
newModel<-T
load("ObservedModel.RData")
head(nstat)
factor(nstat$L1)
factor(nstat$L1,c("Low","Medium","High"))
nstat$L1<-factor(nstat$L1,c("Low","Medium","High"))
ggplot(nstat,aes(x=value,fill=L1)) + geom_density(alpha=0.6) + facet_wrap(~Metric,scales='free',nrow=2) + scale_fill_discrete("Resource Availability") + geom_vline(data=ndat,aes(xintercept=value,col=L1),linetype="dashed") + scale_color_discrete(guide='none')
nstat$L1<-factor(nstat$L1,c("Low","Medium","High"))
ggplot(nstat,aes(x=value,fill=L1)) + geom_density(alpha=0.6) + facet_wrap(~Metric,scales='free',nrow=3) + scale_fill_discrete("Resource Availability") + theme_bw()
ggplot(nstat,aes(x=value,fill=L1)) + geom_density(alpha=0.6) + facet_wrap(~Metric,scales='free',nrow=3) + scale_fill_discrete("Resource Availability") + theme_bw() + scale_fill_manual("Resource Availability",values=c("Grey70","Grey20","Black"))
ggplot(nstat,aes(x=value,fill=L1)) + geom_density(alpha=0.6) + facet_wrap(~Metric,scales='free',nrow=3) + scale_fill_discrete("Resource Availability") + theme_bw() + scale_fill_manual("Resource Availability",values=c("Grey70","Grey40","Black"))
ggplot(nstat,aes(x=value,fill=L1)) + geom_density(alpha=0.7) + facet_wrap(~Metric,scales='free',nrow=3) + scale_fill_discrete("Resource Availability") + theme_bw() + scale_fill_manual("Resource Availability",values=c("Grey70","Grey40","Black"))
levels(nstat$Metric)<-"Niche Overlap"
ggplot(nstat,aes(x=value,fill=L1)) + geom_density(alpha=0.7) + facet_wrap(~Metric,scales='free',nrow=3) + scale_fill_discrete("Resource Availability") + theme_bw() + scale_fill_manual("Resource Availability",values=c("Grey70","Grey40","Black"))
ggplot(nstat,aes(x=value,fill=L1)) + geom_density(alpha=0.7) + facet_wrap(~Metric,scales='free',nrow=3) + scale_fill_discrete("Resource Availability") + theme_bw() + scale_fill_manual("Resource Availability",values=c("Grey70","Grey40","Black"))
ggplot(nstat,aes(x=value,fill=L1)) + geom_density(alpha=0.7) + facet_wrap(~Metric,scales='free',nrow=3) + scale_fill_discrete("Resource Availability") + theme_bw() + scale_fill_manual("Resource Availability",values=c("Grey80","Grey50","Black"))
source('~/.active-rstudio-document', echo=TRUE)
head(datph)
source('~/.active-rstudio-document', echo=TRUE)
paste(int$Time,int$DateP)
int$Time
int<-read.csv(paste(droppath,"Thesis/Maquipucuna_SantaLucia/Results/Network/HummingbirdInteractions.csv",sep=""),row.names=1)
droppath<-"C:/Users/Ben/Dropbox/"
int<-read.csv(paste(droppath,"Thesis/Maquipucuna_SantaLucia/Results/Network/HummingbirdInteractions.csv",sep=""),row.names=1)
int$timestamp<-as.POSIXct(paste(int$Time,int$DateP),format="%H:%M:%S %Y-%m-%d")
int
int$timestamp
int<-read.csv("InputData/HummingbirdInteractions.csv")
int$timestamp<-as.POSIXct(paste(int$Time,int$DateP),format="%H:%M:%S %Y-%m-%d")
source('~/.active-rstudio-document', echo=TRUE)
int<-read.csv("InputData/HummingbirdInteractions.csv")
int$timestamp<-as.POSIXct(paste(int$Time,int$DateP),format="%H:%M:%S %Y-%m-%d")
#one date error
int[int$DateP %in% '2013-07-25',"Month"]<-7
#one duplicate camera error, perhaps two GPS records.
int<-int[!(int$ID %in% "FH1108" & int$Date_F %in% '2014-12-01'),]
int[int$Iplant_Double %in% "Onagaraceae fuschia",]<-"Fuchsia macrostigma"
int$Iplant_Double %in% "Onagaraceae fuschia"
source('~/.active-rstudio-document', echo=TRUE)
datph<-datph[order(datph$timestamp),]
datph$timestamp
head(datph)
source('~/.active-rstudio-document', echo=TRUE)
source("Bayesian/NmixturePoissonRagged2m.R")
writeLines(readLines("Bayesian/NmixturePoissonRagged2m.R"))
source('~/.active-rstudio-document', echo=TRUE)
head(predhl)
predhl$L1
levels(predhl$BFlowerL)<-c("Low","Medium","High")
predhl$BFlowerL
predhl$BFlowerL
indat$scaledR
predH<-trajF(alpha=castdf$alpha_mu,beta1=castdf$beta1_mu,trait=indat[indat$R=="High","Traitmatch"],resources=indat[indat$R=="High","scaledR"],beta2=castdf$beta2_mu,beta3=castdf$beta3_mu)
predM<-trajF(alpha=castdf$alpha_mu,beta1=castdf$beta1_mu,trait=indat[indat$R=="Medium","Traitmatch"],resources=indat[indat$R=="Medium","scaledR"],beta2=castdf$beta2_mu,beta3=castdf$beta3_mu)
predL<-trajF(alpha=castdf$alpha_mu,beta1=castdf$beta1_mu,trait=indat[indat$R=="Low","Traitmatch"],resources=indat[indat$R=="Low","scaledR"],beta2=castdf$beta2_mu,beta3=castdf$beta3_mu)
predhl<-melt(list(High=predH,Medium=predM,Low=predL),id.vars=colnames(predH))
colnames(predhl)[5]<-"BFlowerL"
predhl$BFlowerL<-factor(as.character(predhl$BFlowerL))
levels(predhl$BFlowerL)<-c("Low","Medium","High")
predhl$BFlowerL
predhl<-melt(list(High=predH,Medium=predM,Low=predL),id.vars=colnames(predH))
head(predhl)
source('~/.active-rstudio-document', echo=TRUE)
#Trajectories from posterior
predH<-trajF(alpha=castdf$alpha_mu,beta1=castdf$beta1_mu,trait=indat[indat$R=="High","Traitmatch"],resources=indat[indat$R=="High","scaledR"],beta2=castdf$beta2_mu,beta3=castdf$beta3_mu)
predM<-trajF(alpha=castdf$alpha_mu,beta1=castdf$beta1_mu,trait=indat[indat$R=="Medium","Traitmatch"],resources=indat[indat$R=="Medium","scaledR"],beta2=castdf$beta2_mu,beta3=castdf$beta3_mu)
predL<-trajF(alpha=castdf$alpha_mu,beta1=castdf$beta1_mu,trait=indat[indat$R=="Low","Traitmatch"],resources=indat[indat$R=="Low","scaledR"],beta2=castdf$beta2_mu,beta3=castdf$beta3_mu)
predhl<-melt(list(High=predH,Medium=predM,Low=predL),id.vars=colnames(predH))
colnames(predhl)[6]<-"BFlowerL"
predhl$BFlowerL<-factor(as.character(predhl$BFlowerL))
levels(predhl$BFlowerL)<-c("Low","Medium","High")
ggplot(data=predhl,aes(x=trait)) + geom_ribbon(aes(ymin=lower,ymax=upper,fill=BFlowerL),alpha=0.5)  + geom_line(aes(y=mean,col=BFlowerL),size=.8) + theme_bw() + ylab("Interactions") + xlab("Difference between Bill and Corolla Length") + geom_point(data=mindat,aes(x=Traitmatch,y=value))+ labs(fill="Resource Availability",col="Resource Availability")
ggsave("Figures/AllRegression.jpeg",height=5,width=7)
##Species Predictions
```{r,fig.height=10,fig.width=11,eval=T}
castdf<-dcast(pars_detect[pars_detect$par %in% c("beta1","beta2","beta3","alpha"),], species +Chain +Draw ~par ,value.var="estimate")
#Turn to
castdf$species<-factor(castdf$species,levels=1:max(as.numeric(castdf$species)))
species.split<-split(castdf,list(castdf$species),drop = T)
species.traj<-list()
for(d in 1:length(species.split)){
x<-species.split[[d]]
index<-unique(x$species)
#get data for those species
billd<-indat[indat$jBird %in% index,]
#scale resources
species.traj[[d]]<-trajF(alpha=x$alpha,beta1=x$beta1,beta2=x$beta2,beta3=x$beta3,resources=billd$scaledR,trait=billd$Traitmatch)
}
names(species.traj)<-names(species.split)
species.traj<-melt(species.traj,id.var=colnames(species.traj[[1]]))
#split out names and model
species.traj[,c("Index")]<-colsplit(species.traj$L1,"\\.",c("Index"))
spe<-merge(species.traj,jagsIndexBird,by.x="Index",by.y="jBird")
#plot and compare to original data
ggplot(data=spe,aes(x=trait)) + geom_ribbon(aes(ymin=lower,ymax=upper),alpha=0.2,fill='red') + geom_line(aes(y=mean),size=.5) + theme_bw() + ylab("Daily Interaction Rate")+ xlab("Difference between Bill and Corolla Length") + facet_wrap(~Hummingbird,scales="free",ncol=4) + geom_point(data=mindat,aes(x=Traitmatch,y=value),size=2.5)
```
###Species Predictions: High and Low Availability
```{r,fig.height=10,fig.width=11,eval=T}
castdf<-dcast(pars_detect[pars_detect$par %in% c("beta1","beta2","beta3","alpha"),], species +Chain +Draw ~par ,value.var="estimate")
#Turn to
castdf$species<-factor(castdf$species,levels=1:max(as.numeric(castdf$species)))
species.split<-split(castdf,list(castdf$species),drop = T)
species.traj<-list()
for(d in 1:length(species.split)){
x<-species.split[[d]]
index<-unique(x$species)
#get data for those species
billd<-indat[indat$jBird %in% index,]
sh<-trajF(alpha=x$alpha,beta1=x$beta1,beta2=x$beta2,beta3=x$beta3,resources=billd[billd$R=="High","scaledR"],trait=billd[billd$R=="High","Traitmatch"])
sm<-trajF(alpha=x$alpha,beta1=x$beta1,beta2=x$beta2,beta3=x$beta3,resources=billd[billd$R=="Medium","scaledR"],trait=billd[billd$R=="Medium","Traitmatch"])
sl<-trajF(alpha=x$alpha,beta1=x$beta1,beta2=x$beta2,beta3=x$beta3,resources=billd[billd$R=="Low","scaledR"],trait=billd[billd$R=="Low","Traitmatch"])
sm<-melt(list(High=sh,Medium=sm,Low=sl),id.vars=colnames(sl))
species.traj[[d]]<-sm
}
names(species.traj)<-names(species.split)
species.traj<-melt(species.traj,id.var=colnames(species.traj[[1]]))
#split out names and model
species.traj[,c("Index")]<-colsplit(species.traj$L1,"\\.",c("Index"))
spe<-merge(species.traj,jagsIndexBird,by.x="Index",by.y="jBird")
#plot and compare to original data
indat$rplot<-as.factor(indat$scaledR)
levels(indat$rplot)<-c("Low","Medium","High")
spe$resources<-as.factor(spe$resources)
levels(spe$resources)<-c("Low","Medium","High")
ggplot(data=spe,aes(x=trait)) + geom_ribbon(aes(ymin=lower,ymax=upper,fill=resources),alpha=0.5) + geom_line(aes(y=mean,group=resources),size=.5) + theme_bw() + ylab("Daily Interaction Rate")+ xlab("Difference between Bill and Corolla Length") + facet_wrap(~Hummingbird,scales="free",ncol=4) + geom_point(data=indat,aes(x=Traitmatch,y=Yobs),size=1.2) + scale_fill_manual("Resource Availability",values=c("Grey70","Grey40","Black"))
ggsave("Figures/SpeciesRegression.jpeg",height=7,width=11)
```
##Species Level Interaction
```{r,fig.height=11,fig.width=10,eval=F}
castdf<-dcast(pars_detect[pars_detect$par %in% c("beta1","beta2","beta3","alpha"),], species +Chain + Draw~par,value.var="estimate")
#Turn to
castdf$species<-factor(castdf$species,levels=1:max(as.numeric(castdf$species)))
species.split<-split(castdf,list(castdf$species),drop = T)
species.traj<-list()
for(d in 1:length(species.split)){
dat<-species.split[[d]]
index<-unique(dat$species)
#get data for those species
billd<-mindat[mindat$jBird %in% index,]
#Calculate interaction effect
species.traj[[d]]<-intF(alpha=dat$alpha,beta1=dat$beta1,x=billd[billd$value > 0 & !is.na(billd$value),'Traitmatch'],resources=billd[billd$value > 0 & !is.na(billd$value),'scaledR'],beta2=dat$beta2,beta3=dat$beta3)
}
names(species.traj)<-names(species.split)
species.traj<-melt(species.traj,id.var=colnames(species.traj[[1]]))
#split out names and model
species.traj[,c("Index")]<-colsplit(species.traj$L1,"\\.",c("Index"))
spe<-merge(species.traj,jagsIndexBird,by.x="Index",by.y="jBird")
#match colnames
#plot and compare to original data
ggplot(data=spe,aes(x=x)) + geom_ribbon(aes(ymin=lower,ymax=upper,fill=Hummingbird),alpha=0.3) + geom_line(aes(y=mean,col=Hummingbird),size=1) + theme_bw() + xlab("Difference between Bill and Corolla Length")  + ylab("Effect of Resources on Trait Difference") + facet_wrap(~Hummingbird,scales="free",ncol=3)
ggsave("Figures/SpeciesInteraction.jpeg",height=6,width=7)
```
These plots can be tricky to interpret if one forgets that trait matching as a covariate is a distance. Therefore remember that a positive slope in the plot above indiciates, "As resources increase species use flowers less similiar to their bill lengths".
## Which species did we predict well?
```{r}
smat<-pars_detect %>% filter(par=="E") %>% group_by(species) %>% summarize(fit=sum(estimate)) %>% arrange(desc(fit))
smat<-merge(smat,jagsIndexBird,by.x="species",by.y="jBird")
```
## Discrepancy matrix
```{r}
dmat<-pars_detect %>% filter(par=="E") %>% group_by(species,plant) %>% summarize(fit=sum(estimate)) %>% arrange(desc(fit))
dmat<-merge(dmat,jagsIndexBird,by.x="species",by.y="jBird")
dmat<-merge(dmat,jagsIndexPlants,by.x="plant",by.y="jPlant")
head(dmat,10)
#get order
hord<-dmat %>% group_by(Hummingbird) %>% summarize(n=sum(fit)) %>% arrange(desc(n)) %>% .$Hummingbird
pord<-dmat %>% group_by(Iplant_Double) %>% summarize(n=sum(fit)) %>% arrange(n) %>%  .$Iplant_Double
dmat$Hummingbird<-factor(dmat$Hummingbird,levels=hord)
dmat$Iplant_Double<-factor(dmat$Iplant_Double,levels=pord)
ggplot(dmat,aes(x=Hummingbird,Iplant_Double,fill=fit)) + geom_tile() + theme_bw() + scale_fill_continuous("Discrepancy",low="blue",high="red") + theme(axis.text.x=element_text(angle = -90))
```
##Resource Abundance Functions
Let's take a closer look at distribution of interaction effect posteriors values for each species.
```{r,eval=T}
post<-pars_detect %>% filter(par %in% "beta2") %>% group_by(Hummingbird) %>% summarize(mean=mean(estimate),median=median(estimate),lower=quantile(probs=0.025,estimate),upper=quantile(probs=0.975,estimate)) %>% melt(id.vars='Hummingbird')
ggplot(pars_detect[pars_detect$par %in% "beta2",],aes(x=estimate)) + geom_histogram() + facet_wrap(~Hummingbird,scales='free',ncol=4) + geom_vline(data=post,aes(xintercept=value,col=variable))
```
##Interaction density functions
Let's take a closer look at distribution of interaction effect posteriors values for each species.
```{r,eval=T}
post<-pars_detect %>% filter(par %in% "beta3") %>% group_by(Hummingbird) %>% summarize(mean=mean(estimate),median=median(estimate),lower=quantile(probs=0.025,estimate),upper=quantile(probs=0.975,estimate)) %>% melt(id.vars='Hummingbird')
ggplot(pars_detect[pars_detect$par %in% "beta3",],aes(x=estimate)) + geom_histogram() + facet_wrap(~Hummingbird,scales='free',ncol=4) + geom_vline(data=post,aes(xintercept=value,col=variable))
```
##Trait-matching and Bill Length
Do species with long bill lengths have positive traitmatching effects?
```{r,fig.height=7,fig.width=8}
#species names
b<-pars_detect[pars_detect$par %in% "beta1",]
#traits
b<-merge(b,hum.morph,by.x="Hummingbird",by.y="English")
post<-b %>% filter(par %in% "beta1") %>% group_by(Hummingbird) %>% summarize(mean=mean(estimate),median=median(estimate),lower=quantile(probs=0.025,estimate),upper=quantile(probs=0.975,estimate),quantile_l=quantile(estimate)[[1]],quantile_u=quantile(estimate)[[2]]) %>% melt(id.vars='Hummingbird')
#get order of mean posterior
ord<-post %>% filter(variable=="mean") %>% arrange(value) %>% .$Hummingbird
b$Hummingbird<-factor(b$Hummingbird,levels=ord)
ggplot(b,aes(y=estimate,x=as.factor(Total_Culmen),group=Hummingbird)) + geom_violin(fill='grey50') + coord_flip()  + ggtitle("Trait-matching and Bill Length") + theme_bw()
```
##Interaction and Bill Length
Do species with long bill lengths have positive interaction effects?
```{r,fig.height=7,fig.width=8,eval=F}
#species names
b<-pars_detect[pars_detect$par %in% "beta3",]
#traits
b<-merge(b,hum.morph,by.x="Hummingbird",by.y="English")
post<-b %>% filter(par %in% "beta3") %>% group_by(Hummingbird) %>% summarize(mean=mean(estimate),median=median(estimate),lower=quantile(probs=0.025,estimate),upper=quantile(probs=0.975,estimate),quantile_l=quantile(estimate)[[1]],quantile_u=quantile(estimate)[[2]]) %>% melt(id.vars='Hummingbird')
#get order of mean posterior
ord<-post %>% filter(variable=="mean") %>% arrange(value) %>% .$Hummingbird
b$Hummingbird<-factor(b$Hummingbird,levels=ord)
ggplot(b,aes(y=estimate,x=Hummingbird,fill=Total_Culmen)) + geom_violin() + coord_flip() + scale_fill_continuous(low='blue',high='red') + ggtitle("Interaction Effect and Bill Length") + theme_bw()
```
#Estimated niche breadth
```{r}
castdf<-dcast(pars_detect[pars_detect$par %in% c("beta1","beta2","beta3","alpha"),], species +Chain + Draw~par,value.var="estimate")
#Turn to
castdf$species<-factor(castdf$species,levels=1:max(as.numeric(castdf$species)))
species.split<-split(castdf,list(castdf$species),drop = T)
species.traj<-lapply(species.split,function(dat){
index<-unique(dat$species)
#get data for those species
billd<-indat[indat$jBird %in% index,]
d<-data.frame(alpha=dat$alpha,beta1=dat$beta1,beta2=dat$beta2,beta3=dat$beta3)
#fit regression for each input estimate
sampletraj<-list()
for (y in 1:nrow(d)){
v=exp(d$alpha[y] + d$beta1[y] * billd$Traitmatch + d$beta2[y] * billd$scaledR + d$beta3[y] * billd$Traitmatch*billd$scaledR)
sampletraj[[y]]<-data.frame(x=as.numeric(billd$Traitmatch),y=as.numeric(v),r=as.numeric(billd$scaledR),jBird=billd$jBird,jPlant=billd$jPlant,jTime=billd$jTime)
}
sample_all<-rbind_all(sampletraj)
})
species.traj<-rbind_all(species.traj)
```
Mean Estimates for Corolla Sizes
```{r}
species.mean<-species.traj %>% group_by(jBird,jPlant,r) %>% summarize(Traitmatch=unique(x),phi=mean(y))
tomerge<-indat %>% select(jBird,jPlant,Hummingbird,Iplant_Double) %>% distinct()
species.mean<-merge(species.mean,tomerge)
#get corolla sizes
species.mean<-merge(species.mean,fl.morph,by.x="Iplant_Double", by.y="Group.1")
#bill order
ord<-hum.morph %>% arrange(Total_Culmen) %>% .$English
species.mean$Hummingbird<-factor(species.mean$Hummingbird,levels=ord)
#add level to hum.morph to match naming convention
species.mean<-merge(species.mean,hum.morph[,c("English","Total_Culmen")],by.x="Hummingbird",by.y="English")
p<-ggplot(species.mean,aes(x=Corolla,y=phi,col=as.factor(r))) + geom_line(size=.9) + geom_vline(aes(xintercept=Total_Culmen),linetype='dashed') + facet_wrap(~Hummingbird,ncol=3,scales="free_y")  + theme_bw() + ylab("Probability of Interaction") + scale_color_manual("Resource Availability",labels=c("Low","Medium","High"),values=c("Black","Blue","Red")) + xlab("Flower Corolla Length (mm)")
p
ggsave("Figures/ResponseCurves.jpeg",height=6.5,width=9)
```
#Niche Breadth
```{r}
species.mean<-species.traj %>% group_by(jBird,jPlant,r) %>% summarize(Traitmatch=unique(x),phi=mean(y),phi_low=quantile(y,0.05),phi_high=quantile(y,0.95))
#merge names
species.mean<-merge(species.mean,jagsIndexBird)
species.mean<-merge(species.mean,jagsIndexPlants)
#get corolla sizes
species.mean<-merge(species.mean,fl.morph,by.x="Iplant_Double", by.y="Group.1")
#bill order
ord<-hum.morph %>% arrange(Total_Culmen) %>% .$English
species.mean$Hummingbird<-factor(species.mean$Hummingbird,levels=ord)
#add level to hum.morph to match naming convention
species.mean<-merge(species.mean,hum.morph[,c("English","Total_Culmen")],by.x="Hummingbird",by.y="English")
#label factor
species.mean$r<-as.factor(species.mean$r)
levels(species.mean$r)<-c("Low","Medium","High")
ggplot(species.mean) + geom_ribbon(alpha=0.7,aes(x=Corolla,ymin=phi_low,ymax=phi_high,fill=r)) + theme_bw() + facet_wrap(~Hummingbird,scales="free",ncol=4)+ ggtitle("Niche Breadth") + geom_vline(aes(xintercept=Total_Culmen),linetype='dashed') + geom_line(aes(x=Corolla,y=phi,fill=r)) + ylab("Probability of Interaction") + xlab("Corolla Length (mm)") + scale_fill_manual("Resource Availability",values=c("Grey70","Grey20","Black"))
ggsave("Figures/NicheBreadth.jpeg",height=7,width=11)
```
##Range plots
```{r}
nsplit<-split(species.mean,species.mean$r)
makeR<-function(x){
#input matrix
aggm<-matrix(nrow=nrow(jagsIndexBird),ncol=nrow(jagsIndexPlants),data=0)
for (j in 1:nrow(x)){
aggm[x[j,"jBird"],x[j,"jPlant"]]<-rpois(1,lambda=x[j,"phi"])
}
aggm<-melt(aggm)
colnames(aggm)<-c("jBird","jPlant","P")
tomerge<-species.mean %>% select(jBird,jPlant,Corolla,Hummingbird,Traitmatch) %>% distinct()
aggm<-merge(aggm,tomerge)
return(aggm)
}
nstat<-lapply(nsplit,function(x){
netstat<-melt(lapply(1:50,function(k) makeR(x)),id.vars=c("jBird","jPlant","Hummingbird","Traitmatch","Corolla","P"))
colnames(netstat)[7]<-"Iteration"
return(netstat)
})
names(nstat)<-c("Low","Medium","High")
nstat<-melt(nstat,colnames(nstat[[1]]))
```
Predicted density
```{r}
ggplot(nstat[nstat$P==1,],aes(x=Corolla,fill=L1)) + geom_density(alpha=0.6) + facet_wrap(~Hummingbird,scales='free',nrow=5) + scale_fill_discrete("Resource Availability") + theme_bw()
```
```{r,fig.width=6,fig.height=10}
rangestat<-nstat %>% filter(P==1) %>% group_by(Hummingbird,L1) %>% summarize(mean=mean(Corolla),lower=quantile(Corolla,0.05),upper=quantile(Corolla,0.95))
ggplot(rangestat,aes(x=Hummingbird,ymin=lower,ymax=upper,ymean=mean,col=L1)) + geom_linerange(alpha=0.5,position=position_dodge(width=.75),size=2) + geom_point(aes(y=mean),position=position_dodge(width=.75)) + labs(col="Resource Availability",y="Corolla Length (mm)") + theme_bw() + coord_flip() + theme(legend.position="bottom")
```
### Predicted Mean
```{r}
meanstat<-nstat %>% filter(P==1) %>% group_by(Hummingbird,L1,Iteration) %>% summarize(a=mean(Corolla))%>% summarize(mean=mean(a),lower=quantile(a,0.05),upper=quantile(a,0.95))
ggplot(meanstat,aes(x=Hummingbird,ymin=lower,ymax=upper,ymean=mean,col=L1)) + geom_linerange(alpha=0.5,position=position_dodge(width=.6),size=2) + geom_point(aes(y=mean),position=position_dodge(width=.6)) + labs(col="Resource Availability",y="Corolla Length (mm)") + theme_bw() + coord_flip() + theme(legend.position="bottom")
```
### Predicted Min
```{r}
meanstat<-nstat %>% filter(P==1) %>% group_by(Hummingbird,L1,Iteration) %>% summarize(a=min(Corolla))%>% summarize(mean=mean(a),lower=quantile(a,0.05),upper=quantile(a,0.95))
ggplot(meanstat,aes(x=Hummingbird,ymin=lower,ymax=upper,ymean=mean,col=L1)) + geom_linerange(alpha=0.5,position=position_dodge(width=.75),size=2) + geom_point(aes(y=mean),position=position_dodge(width=.75)) + labs(col="Resource Availability",y="Corolla Length (mm)") + theme_bw() + coord_flip() + theme(legend.position="bottom")
```
### Predicted Max
```{r}
meanstat<-nstat %>% filter(P==1) %>% group_by(Hummingbird,L1,Iteration) %>% summarize(a=min(Corolla))%>% summarize(mean=mean(a),lower=quantile(a,0.05),upper=quantile(a,0.95))
ggplot(meanstat,aes(x=Hummingbird,ymin=lower,ymax=upper,ymean=mean,col=L1)) + geom_linerange(alpha=0.5,position=position_dodge(width=.6),size=2) + geom_point(aes(y=mean),position=position_dodge(width=.6)) + labs(col="Resource Availability",y="Corolla Length (mm)") + theme_bw() + coord_flip() + theme(legend.position="bottom")
```
#Generate network
```{r}
#Split by resource
nsplit<-split(species.mean,species.mean$r)
makeN<-function(x){
#input matrix
aggm<-matrix(nrow=nrow(jagsIndexBird),ncol=nrow(jagsIndexPlants),data=0)
for (j in 1:nrow(x)){
aggm[x[j,"jBird"],x[j,"jPlant"]]<-rpois(1,lambda=x[j,"phi"])
}
#calculate network statistic
nstat<-networklevel(aggm,index=c("niche overlap"),level="lower")
}
nstat<-lapply(nsplit,function(x){
netstat<-melt(t(sapply(1:500,function(k) makeN(x))))
colnames(netstat)<-c("Iteration","Metric","value")
return(netstat)
})
names(nstat)<-c("Low","Medium","High")
nstat<-melt(nstat,colnames(nstat[[1]]))
nstat$L1<-factor(nstat$L1,c("Low","Medium","High"))
levels(nstat$Metric)<-"Niche Overlap"
ggplot(nstat,aes(x=value,fill=L1)) + geom_density(alpha=0.7) + facet_wrap(~Metric,scales='free',nrow=3) + scale_fill_discrete("Resource Availability") + theme_bw() + scale_fill_manual("Resource Availability",values=c("Grey80","Grey50","Black"))
ggsave("Figures/NetworkStatistics.jpeg",height=4,width=6,dpi=600)
```
Compared to raw visits
```{r}
sindat<-split(indat,indat$scaledR)
ndat<-lapply(sindat,function(x){
web<-acast(x[x$Yobs==1,],Hummingbird~Iplant_Double,value.var = "Yobs", fun= function(x){ length(unique(x))})
nstat<-t(networklevel(web,index=c("niche overlap"),level="lower"))
})
names(ndat)<-c("Low","Medium","High")
ndat<-melt(ndat)
colnames(ndat)<-c("Var1","Metric","value","L1")
ggplot(nstat,aes(x=value,fill=L1)) + geom_density(alpha=0.6) + facet_wrap(~Metric,scales='free',nrow=2) + scale_fill_discrete("Resource Availability") + geom_vline(data=ndat,aes(xintercept=value,col=L1),linetype="dashed") + scale_color_discrete(guide='none')
```
source("Bayesian/NmixturePoissonRagged2m.R")
writeLines(readLines("Bayesian/NmixturePoissonRagged2m.R"))
load("Observed.RData")
library(reshape2)
library(chron)
library(ggplot2)
library(knitr)
library(R2jags)
library(dplyr)
library(stringr)
library(gridExtra)
library(boot)
library(bipartite)
library(VennDiagram)
opts_chunk$set(message=FALSE,warning=FALSE,fig.width=10,fig.height=7,echo=TRUE,cache=F,fig.align='center',fig.path="figureObserved/")
set.seed(3)
ggplot(fll,aes(x=Corolla,fill=R)) + geom_density(alpha=0.8) + scale_fill_manual(labels=c("High","Medium","Low"),values=c("Black","Grey50","grey80")) + labs(fill="Resource Availability") + theme_bw() + labs(x="Corolla Length (mm)")
ggplot(fll,aes(x=Corolla,fill=R)) + geom_density(alpha=0.7) + scale_fill_manual(labels=c("High","Medium","Low"),values=c("Black","Grey50","grey80")) + labs(fill="Resource Availability") + theme_bw() + labs(x="Corolla Length (mm)")
ggplot(fll,aes(x=Corolla,fill=R)) + geom_density(alpha=0.6) + scale_fill_manual(labels=c("High","Medium","Low"),values=c("Black","Grey50","grey80")) + labs(fill="Resource Availability") + theme_bw() + labs(x="Corolla Length (mm)")
ggplot(fll,aes(x=Corolla,fill=R)) + geom_density(alpha=0.7) + scale_fill_manual(labels=c("High","Medium","Low"),values=c("Black","Grey50","grey80")) + labs(fill="Resource Availability") + theme_bw() + labs(x="Corolla Length (mm)")
ggsave("Figures/TraitDensity.jpeg",height=3,width=6,dpi=500)
373/2
373/2/12
2*12*4
head(full.fl)
full.fl$Date_F
unique(head(full.fl))
unique((full.fl$Date_F)
)
head(full.fl)
full.fl$ID
unique(full.fl$ID )
unique(full.fl$Month)
full.fl %>% group_by(Month,Year,ID)
full.fl %>% group_by(Month,Year,ID) %>% distint()
full.fl %>% group_by(Month,Year,ID) %>% distinct()
full.fl %>% group_by(Month,Year,Transect_R) %>% distint()
full.fl %>% group_by(Month,Year,Transect_R) %>% distinct()
373/2/12/6
full.fl %>% group_by(Month,Year,Transect_R) %>% summarize(n=())
full.fl %>% group_by(Month,Year,Transect_R) %>% summarize(n=())
full.fl %>% group_by(Month,Year,Transect_R) %>% summarize(n=())
full.fl %>% group_by(Month,Year,Transect_R) %>% summarize(n=()
full.fl %>% group_by(Month,Year,Transect_R)
full.fl %>% group_by(Month,Year,Transect_R) %>% summarize(n=n())
full.fl %>% group_by(Month,Year,Transect_R) %>% distcint() %>% summarize(n=n())
full.fl %>% group_by(Month,Year,Transect_R) %>% distinct() %>% summarize(n=n())
ggplot(flower.month,aes(x=Month.a,log(Flowers),col=R,shape=as.factor(Year))) + geom_point(size=3) + theme_bw()  + geom_smooth(aes(group=1)) + ylab("Flowers") + xlab("Month") + facet_wrap(~PTransect_R) + labs(shape="Year", y= "Log Available Flowers") + scale_x_discrete(breaks=month.abb[seq(1,12,2)]) + scale_fill_manual("Resource Availability",values=c("Grey80","Grey50","Black")) + labs(col="Resource Availability")
ggplot(flower.month,aes(x=Month.a,log(Flowers),col=R,shape=as.factor(Year))) + geom_point(size=3) + theme_bw()  + geom_smooth(aes(group=1)) + ylab("Flowers") + xlab("Month") + facet_wrap(~PTransect_R) + labs(shape="Year", y= "Log Available Flowers") + scale_x_discrete(breaks=month.abb[seq(1,12,2)]) + scale_col_manual("Resource Availability",values=c("Grey80","Grey50","Black")) + labs(col="Resource Availability")
ggplot(flower.month,aes(x=Month.a,log(Flowers),col=R,shape=as.factor(Year))) + geom_point(size=3) + theme_bw()  + geom_smooth(aes(group=1)) + ylab("Flowers") + xlab("Month") + facet_wrap(~PTransect_R) + labs(shape="Year", y= "Log Available Flowers") + scale_x_discrete(breaks=month.abb[seq(1,12,2)]) + scale_color_manual("Resource Availability",values=c("Grey80","Grey50","Black")) + labs(col="Resource Availability")
ggplot(flower.month,aes(x=Month.a,log(Flowers),col=R,shape=as.factor(Year))) + geom_point(size=3) + theme_bw()  + geom_smooth(aes(group=1)) + ylab("Flowers") + xlab("Month") + facet_wrap(~PTransect_R) + labs(shape="Year", y= "Log Available Flowers") + scale_x_discrete(breaks=month.abb[seq(1,12,2)]) + scale_color_manual(labels=c("Low","Medium","High"),values=c("black","blue","red")) + labs(col="Resource Availability")
library(reshape2)
library(chron)
library(ggplot2)
library(knitr)
library(R2jags)
library(dplyr)
library(stringr)
library(gridExtra)
library(boot)
library(bipartite)
library(lme4)
opts_chunk$set(message=FALSE,warning=FALSE,fig.width=10,fig.height=7,echo=TRUE,cache=F,fig.align='center',fig.path="figureObserved/")
#new model update
newModel<-T
load("ObservedModel.RData")
ggplot(nstat[nstat$P==1,],aes(x=Corolla,fill=L1)) + geom_density(alpha=0.6) + facet_wrap(~Hummingbird,scales='free',nrow=5) + scale_fill_discrete("Resource Availability") + theme_bw()
ggplot(nstat[nstat$P==1,],aes(x=Corolla,fill=L1)) + geom_density(alpha=0.6) + facet_wrap(~Hummingbird,scales='free',nrow=5) + scale_fill_discrete("Resource Availability") + theme_bw()
head(nstat)
nsplit<-split(species.mean,species.mean$r)
makeR<-function(x){
#input matrix
aggm<-matrix(nrow=nrow(jagsIndexBird),ncol=nrow(jagsIndexPlants),data=0)
for (j in 1:nrow(x)){
aggm[x[j,"jBird"],x[j,"jPlant"]]<-rpois(1,lambda=x[j,"phi"])
}
aggm<-melt(aggm)
colnames(aggm)<-c("jBird","jPlant","P")
tomerge<-species.mean %>% select(jBird,jPlant,Corolla,Hummingbird,Traitmatch) %>% distinct()
aggm<-merge(aggm,tomerge)
return(aggm)
}
nstat<-lapply(nsplit,function(x){
netstat<-melt(lapply(1:50,function(k) makeR(x)),id.vars=c("jBird","jPlant","Hummingbird","Traitmatch","Corolla","P"))
colnames(netstat)[7]<-"Iteration"
return(netstat)
})
names(nstat)<-c("Low","Medium","High")
nstat<-melt(nstat,colnames(nstat[[1]]))
ggplot(nstat[nstat$P==1,],aes(x=Corolla,fill=L1)) + geom_density(alpha=0.6) + facet_wrap(~Hummingbird,scales='free',nrow=5) + scale_fill_discrete("Resource Availability") + theme_bw()
nstat$L1
factor(nstat$L1)
nstat$L1<-factor(nstat$L1,levels=c("Low","Medium","High"))
ggplot(nstat[nstat$P==1,],aes(x=Corolla,fill=L1)) + geom_density(alpha=0.6) + facet_wrap(~Hummingbird,scales='free',nrow=5) + scale_fill_discrete("Resource Availability") + theme_bw()
ggplot(nstat[nstat$P==1,],aes(x=Corolla,fill=L1)) + geom_density(alpha=0.6) + facet_wrap(~Hummingbird,scales='free',nrow=5)  + theme_bw()+ scale_fill_manual("Resource Availability",values=c("Grey80","Grey50","Black"))
ggplot(nstat[nstat$P==1,],aes(x=Corolla,fill=L1)) + geom_density(alpha=0.6) + facet_wrap(~Hummingbird,scales='free',nrow=3)  + theme_bw()+ scale_fill_manual("Resource Availability",values=c("Grey80","Grey50","Black"))
ggplot(nstat[nstat$P==1,],aes(x=Corolla,fill=L1)) + geom_density(alpha=0.6) + facet_wrap(~Hummingbird,scales='free',nrow=3)  + theme_bw()+ scale_fill_manual("Resource Availability",values=c("Grey80","Grey50","Black"))
ggplot(nstat[nstat$P==1,],aes(x=Corolla,fill=L1)) + geom_density(alpha=0.6) + facet_wrap(~Hummingbird,scales='free',ncol=3)  + theme_bw()+ scale_fill_manual("Resource Availability",values=c("Grey80","Grey50","Black"))
head(nstat)
ndat
species.mean
nstat
head(nstat)
nstat$L1<-factor(nstat$L1,levels=c("Low","Medium","High"))
ord<-hum.morph %>% arrange(Total_Culmen) %>% .$English
ord
factor(species.mean$Hummingbird,levels=ord)
head(nstat)
nstat<-merge(nstat,hum.morph[,c("English","Total_Culmen")],by.x="Hummingbird",by.y="English")
ggplot(nstat[nstat$P==1,],aes(x=Corolla,fill=L1)) + geom_density(alpha=0.6) + facet_wrap(~Hummingbird,scales='free',ncol=3)  + theme_bw()+ scale_fill_manual("Resource Availability",values=c("Grey80","Grey50","Black"))  + geom_vline(aes(xintercept=Total_Culmen),linetype='dashed')
nstat$L1<-factor(nstat$L1,levels=c("High","Medium","Low"))
#add level to hum.morph to match naming convention
nstat<-merge(nstat,hum.morph[,c("English","Total_Culmen")],by.x="Hummingbird",by.y="English")
ggplot(nstat[nstat$P==1,],aes(x=Corolla,fill=L1)) + geom_density(alpha=0.6) + facet_wrap(~Hummingbird,scales='free',ncol=3)  + theme_bw()+ scale_fill_manual("Resource Availability",values=c("Black","Grey50","Grey80"))  + geom_vline(aes(xintercept=Total_Culmen),linetype='dashed')
head(nstat)
nsplit<-split(species.mean,species.mean$r)
makeR<-function(x){
#input matrix
aggm<-matrix(nrow=nrow(jagsIndexBird),ncol=nrow(jagsIndexPlants),data=0)
for (j in 1:nrow(x)){
aggm[x[j,"jBird"],x[j,"jPlant"]]<-rpois(1,lambda=x[j,"phi"])
}
aggm<-melt(aggm)
colnames(aggm)<-c("jBird","jPlant","P")
tomerge<-species.mean %>% select(jBird,jPlant,Corolla,Hummingbird,Traitmatch) %>% distinct()
aggm<-merge(aggm,tomerge)
return(aggm)
}
nstat<-lapply(nsplit,function(x){
netstat<-melt(lapply(1:100,function(k) makeR(x)),id.vars=c("jBird","jPlant","Hummingbird","Traitmatch","Corolla","P"))
colnames(netstat)[7]<-"Iteration"
return(netstat)
})
names(nstat)<-c("Low","Medium","High")
nstat<-melt(nstat,colnames(nstat[[1]]))
nstat$L1<-factor(nstat$L1,levels=c("High","Medium","Low"))
#add level to hum.morph to match naming convention
nstat<-merge(nstat,hum.morph[,c("English","Total_Culmen")],by.x="Hummingbird",by.y="English")
ggplot(nstat[nstat$P==1,],aes(x=Corolla,fill=L1)) + geom_density(alpha=0.6) + facet_wrap(~Hummingbird,scales='free',ncol=3)  + theme_bw()+ scale_fill_manual("Resource Availability",values=c("Black","Grey50","Grey80"))  + geom_vline(aes(xintercept=Total_Culmen),linetype='dashed')
ggplot(nstat[nstat$P==1,],aes(x=Corolla,fill=L1)) + geom_density(alpha=0.6) + facet_wrap(~Hummingbird,scales='free',ncol=4)  + theme_bw()+ scale_fill_manual("Resource Availability",values=c("Black","Grey50","Grey80"))  + geom_vline(aes(xintercept=Total_Culmen),linetype='dashed')
ggsave("Figures/PredictedDensity.jpeg",dpi=400,height=8,width=10)
ggplot(nstat[nstat$P==1,],aes(x=Corolla,fill=L1)) + geom_density(alpha=0.8) + facet_wrap(~Hummingbird,scales='free',ncol=4)  + theme_bw()+ scale_fill_manual("Resource Availability",values=c("Black","Grey50","Grey80"))  + geom_vline(aes(xintercept=Total_Culmen),linetype='dashed')
ggplot(nstat[nstat$P==1,],aes(x=Corolla,fill=L1)) + geom_density(alpha=0.8) + facet_wrap(~Hummingbird,scales='free',ncol=4)  + theme_bw()+ scale_fill_manual("Resource Availability",values=c("Black","Grey40","Grey85"))  + geom_vline(aes(xintercept=Total_Culmen),linetype='dashed')
head(nstat)
ggplot(nstat[nstat$P>0,],aes(x=Corolla,fill=L1)) + geom_density(alpha=0.8) + facet_wrap(~Hummingbird,scales='free',ncol=4)  + theme_bw()+ scale_fill_manual("Resource Availability",values=c("Black","Grey40","Grey85"))  + geom_vline(aes(xintercept=Total_Culmen),linetype='dashed')
ggsave("Figures/PredictedDensity.jpeg",dpi=400,height=8,width=10)
1/sqrt(1000)
hist(rnorm(1e5,0,1/sqrt(100)))
hist(rnorm(1e5,0,1/sqrt(1000)))
