ggplot(data=spe,aes(x=x)) + geom_ribbon(aes(ymin=lower,ymax=upper,fill=Resources),alpha=0.2) + geom_line(aes(y=mean,col=Resources),size=.5) + theme_bw() + ylab("Occurrence Probability")+ xlab("Difference between Bill and Corolla Length") + facet_wrap(~Hummingbird,scales="free",ncol=3) + geom_point(data=mindat,aes(x=Traitmatch,y=value,shape=variable),size=1.5,alpha=.5)
ggplot(indat,aes(x=Traitmatch,y=Yobs,col=as.factor(BAll_Flowers))) + facet_wrap(~Hummingbird,ncol=4) + geom_point() + geom_smooth(method = "glm",method.args=list(family="binomial"))
glm(data=indat,Yobs~Traitmatch*(BAll_Flowers),family="binomial")
glm(data=indat,Yobs~Traitmatch*(BAll_Flowers)*Hummingbird,family="binomial")
glm(data=indat,Yobs~Traitmatch*(BAll_Flowers)+Hummingbird,family="binomial")
glm(data=indat,Yobs~Traitmatch*(BAll_Flowers),family="binomial")
ggplot(species.mean) + geom_ribbon(alpha=0.4,aes(x=TotalCorolla,ymin=phi_low,ymax=phi_high,fill=as.factor(r))) + theme_bw() + facet_wrap(~Hummingbird,scales="free",ncol=3)+ ggtitle("Niche Breadth") + geom_vline(aes(xintercept=Total_Culmen),linetype='dashed') + geom_line(aes(x=TotalCorolla,y=phi,fill=as.factor(r))) + ylab("Probability of Interaction") + xlab("Corolla Length (mm)") + scale_fill_discrete("Resource Availability") + ylim(0,1)
ggplot(species.mean) + geom_ribbon(alpha=0.4,aes(x=TotalCorolla,ymin=phi_low,ymax=phi_high,fill=as.factor(r))) + theme_bw() + facet_wrap(~Hummingbird,scales="free",ncol=4)+ ggtitle("Niche Breadth") + geom_vline(aes(xintercept=Total_Culmen),linetype='dashed') + geom_line(aes(x=TotalCorolla,y=phi,fill=as.factor(r))) + ylab("Probability of Interaction") + xlab("Corolla Length (mm)") + scale_fill_discrete("Resource Availability") + ylim(0,1)
ggplot(data=spe,aes(x=x)) + geom_ribbon(aes(ymin=lower,ymax=upper,fill=Resources),alpha=0.2) + geom_line(aes(y=mean,col=Resources),size=.5) + theme_bw() + ylab("Occurrence Probability")+ xlab("Difference between Bill and Corolla Length") + facet_wrap(~Hummingbird,scales="free",ncol=3) + geom_point(data=mindat,aes(x=Traitmatch,y=value,shape=variable),size=1.5,alpha=.5)
ggplot(species.mean) + geom_ribbon(alpha=0.4,aes(x=TotalCorolla,ymin=phi_low,ymax=phi_high,fill=as.factor(r))) + theme_bw() + facet_wrap(~Hummingbird,scales="free",ncol=4)+ ggtitle("Niche Breadth") + geom_vline(aes(xintercept=Total_Culmen),linetype='dashed') + geom_line(aes(x=TotalCorolla,y=phi,fill=as.factor(r))) + ylab("Probability of Interaction") + xlab("Corolla Length (mm)") + scale_fill_discrete("Resource Availability") + ylim(0,1)
indat %>% group_by(Hummingbird,BAll_Flowers) %>% summarize(mean=mean(TotalCorolla))
mindat %>% group_by(Hummingbird,BAll_Flowers) %>% summarize(mean=mean(TotalCorolla))
head(mindat)
mindat %>% group_by(Hummingbird,BAll_Flowers) %>% summarize(mean=mean(Traitmatch))
mindat %>% group_by(Hummingbird,BAll_Flowers) %>% summarize(mean=mean(Traitmatch),quantile(Traitmatch,0.95))
mindat %>% group_by(Hummingbird,BAll_Flowers) %>% summarize(mean=mean(Traitmatch),quantile(Traitmatch,0.95),quantile(Traitmatch,0.05))
mindat %>% group_by(Hummingbird,BAll_Flowers) %>% summarize(mean=mean(Traitmatch),quantile(Traitmatch,0.95),quantile(Traitmatch,0.05),min(Traitmatch))
mindat %>% group_by(Hummingbird,BAll_Flowers) %>% summarize(mean=mean(Traitmatch),quantile(Traitmatch,0.95),quantile(Traitmatch,0.05),min(Traitmatch),max(Traitmatch))
indat %>% group_by(Hummingbird,BAll_Flowers) %>% summarize(mean=mean(Traitmatch),quantile(Traitmatch,0.95),quantile(Traitmatch,0.05),min(Traitmatch),max(Traitmatch))
indat %>% group_by(Hummingbird,BAll_Flowers) %>% summarize(mean=mean(Traitmatch),quantile(Traitmatch,0.95),quantile(Traitmatch,0.05),min(Traitmatch),max(Traitmatch)) %>% as.data.frame()
head(indat)
ggplot(indat[indat$Yobs==1,],aes(x=Traitmatch,col=as.factor(BAll_Flowers))) + facet_wrap(~Hummingbird,ncol=4) + geom_density()
ggplot(indat[indat$Yobs==1,],aes(x=Traitmatch,col=as.factor(BAll_Flowers))) + facet_wrap(~Hummingbird,ncol=4,scales="free") + geom_density()
ggplot(indat[indat$Yobs==1,],aes(x=Traitmatch,fill=as.factor(BAll_Flowers))) + facet_wrap(~Hummingbird,ncol=4,scales="free") + geom_density()
ggplot(indat[indat$Yobs==1,],aes(x=Traitmatch,fill=as.factor(BAll_Flowers))) + facet_wrap(~Hummingbird,ncol=4,scales="free") + geom_density(alpha=.7)
head(indat)
head(indat)
ggplot(indat,aes(x=Traitmatch,y=Yobs,col=as.factor(FlowerA))) + facet_wrap(~Hummingbird,ncol=4) + geom_point() + geom_smooth(method = "glm",method.args=list(family="binomial"))
ggplot(indat,aes(x=Traitmatch,y=Yobs,col=FlowerA)) + facet_wrap(~Hummingbird,ncol=4) + geom_point() + geom_smooth(method = "glm",method.args=list(family="binomial"))
ggplot(indat,aes(x=Traitmatch,y=Yobs,col=FlowerA)) + facet_wrap(~Hummingbird,ncol=4) + geom_point() + geom_smooth(method = "glm",method.args=list(family="binomial")) + scale_color_continuous(low='blue',high='red')
glm(data=indat,Yobs~Traitmatch*scale(FlowerA),family="binomial")
source('~/.active-rstudio-document', echo=TRUE)
resourceMatrix
resourceMatrix<-scale(resourceMatrix)
mr<-melt(resourceMatrix)
colnames(mr)<-c("jBird","jPlant","jTime","scaledR")
head(rm)
head(mr)
dim(resourceMatrix)
resourceMatrix<-indat %>% group_by(jBird,jPlant,jTime) %>% summarize(v=mean(FlowerA))  %>% acast(jBird ~ jPlant ~ jTime,value.var='v',fill=0)
resourceMatrix<-scale(resourceMatrix)
dim(resourceMatrix)
resourceMatrix<-indat %>% group_by(jBird,jPlant,jTime) %>% summarize(v=mean(FlowerA))  %>% acast(jBird ~ jPlant ~ jTime,value.var='v',fill=0)
dim(resourceMatrix)
scale(resourceMatrix)
indat$scaledR<-scale(indat$FlowerA)
resourceMatrix<-indat %>% group_by(jBird,jPlant,jTime) %>% summarize(v=mean(scaledR))  %>% acast(jBird ~ jPlant ~ jTime,value.var='v',fill=0)
dim(resourceMatrix)
resourceMatrix
glm(data=indat,Yobs~Traitmatch*scale(FlowerA),family="binomial")
glm(data=indat,Yobs~Traitmatch*log(FlowerA),family="binomial")
glm(data=indat,Yobs~Traitmatch*FlowerA,family="binomial")
indat$LFlowerA<-log(indat$FlowerA)
glm(data=indat,Yobs~Traitmatch*LFlowerA,family="binomial")
indat$LFlowerA<-log(indat$FlowerA)+1
glm(data=indat,Yobs~Traitmatch*LFlowerA,family="binomial")
indat$LFlowerA
indat$LFlowerA<-log(indat$FlowerA+1)
glm(data=indat,Yobs~Traitmatch*LFlowerA,family="binomial")
m<-glm(data=indat,Yobs~Traitmatch*LFlowerA,family="binomial")
summary(m)
m<-glm(data=indat,Yobs~Traitmatch*FlowerA,family="binomial")
summary(m)
m<-glm(data=indat,Yobs~Traitmatch*scale(FlowerA),family="binomial")
summary(m)
m<-glm(data=indat,Yobs~Traitmatch*scale(scaledR),family="binomial")
summary(m)
ggplot(indat[indat$Yobs==1,],aes(x=Traitmatch,fill=as.factor(paste(Month,Year)))) + facet_wrap(~Hummingbird,ncol=4,scales="free") + geom_density(alpha=.7)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
a<-indat %>% filter(Hummingbrd=="Green-fronted Lancebill",Yobs==1)
a<-indat %>% filter(Hummingbrd=="Green-fronted Lancebill")
load("Observed.RData")
a<-indat %>% filter(Hummingbrd=="Green-fronted Lancebill")
a<-indat %>% filter(Hummingbrd %in% "Green-fronted Lancebill")
a<-indat %>% filter(Hummingbird %in% "Green-fronted Lancebill")
indat %>% filter(Hummingbird %in% "Green-fronted Lancebill")
indat %>% filter(Hummingbird %in% "Green-fronted Lancebill")
head(indat)
filter(indat,Hummingbird %in% "Green-fronted Lancebill")
filter(indat,Hummingbird %in% "Green-fronted Lancebill")
filter(Hummingbird %in% "Green-fronted Lancebill")
filter(jBird %in% "Green-fronted Lancebill")
ggplot(pars_detect[pars_detect$par %in% c("alpha","beta1","beta2","beta3"),],aes(x=Draw,y=estimate,col=as.factor(Chain))) + geom_line() + facet_grid(par~species,scale="free") + theme_bw() + labs(col="Chain") + ggtitle("Species Level")
resourceMatrix
pars_detect<-extract_par(m2,data=indat,Bird="jBird",Plant="jPlant")
ggplot(pars_detect[pars_detect$par %in% c("alpha","beta1","beta2","beta3"),],aes(x=Draw,y=estimate,col=as.factor(Chain))) + geom_line() + facet_grid(par~species,scale="free") + theme_bw() + labs(col="Chain") + ggtitle("Species Level")
ggplot(pars_detect[pars_detect$par %in% c("dcam","dtrans"),],aes(x=Draw,y=estimate,col=as.factor(Chain))) + geom_line() + facet_wrap(~par,scale="free",ncol=1) + theme_bw() + labs(col="Chain") + ggtitle("Species Level")
ggplot(pars_detect[pars_detect$par %in% c("beta3_mu","beta3_sigma","beta2_mu","beta2_sigma","beta1_mu","beta1_sigma","alpha_mu","alpha_sigma"),],aes(x=estimate)) + geom_histogram() + ggtitle("Group Level Posteriors") + facet_wrap(~par,scale="free",nrow=2) + theme_bw()
head(indat)
indat %>% group_by(Hummingbird) %>% filter(Yobs==1)
indat %>% filter(Yobs==1) %>% group_by(Hummingbird)  %>% filter(Traitmatch==max(Traitmatch)) %>% arrange(Hummingbird)
indat %>% filter(Yobs==1)
indat %>% filter(Camera==1)
indat %>% filter(Camera %in% 1)
indat$Yobs
head(indat)
indat %>% filter(Camera==1)
indat %>% select(Hummingbird,Iplant_Double,Yobs,Traitmatch,DateP,FlowerA) %>% filter(Camera==1)
indat %>% select(Hummingbird,Iplant_Double,Yobs,Traitmatch,DateP,FlowerA)
indat %>% select(Hummingbird,Iplant_Double,Yobs,Traitmatch,DateP,FlowerA) %>% filter(Yobs==1)
indat %>% select(Hummingbird,Iplant_Double,Yobs,Traitmatch,DateP,FlowerA) %>% filter(Yobs==1) %>% group_by(Hummingbird) %>% filter(Traitmatch=max(Traitmatch))
indat %>% select(Hummingbird,Iplant_Double,Yobs,Traitmatch,DateP,FlowerA) %>% filter(Yobs==1) %>% group_by(Hummingbird) %>% filter(Traitmatch==max(Traitmatch))
indat %>% select(Hummingbird,Iplant_Double,Yobs,Traitmatch,DateP,FlowerA) %>% filter(Yobs==1) %>% group_by(Hummingbird) %>% filter(Traitmatch==max(Traitmatch)) %>% as.data.frame()
indat %>% select(Hummingbird,Iplant_Double,Yobs,Traitmatch,DateP,FlowerA,Pierce) %>% filter(Yobs==1) %>% group_by(Hummingbird) %>% filter(Traitmatch==max(Traitmatch)) %>% as.data.frame()
indat %>% select(Hummingbird,Iplant_Double,Yobs,Traitmatch,DateP,FlowerA,Pierce) %>% filter(Yobs==1,!Pierce==Y) %>% group_by(Hummingbird) %>% filter(Traitmatch==max(Traitmatch)) %>% as.data.frame()
indat %>% select(Hummingbird,Iplant_Double,Yobs,Traitmatch,DateP,FlowerA,Pierce) %>% filter(Yobs==1,!Pierce=="Y") %>% group_by(Hummingbird) %>% filter(Traitmatch==max(Traitmatch)) %>% as.data.frame()
fl.morph
source('~/.active-rstudio-document', echo=TRUE)
indat$scaledR<-indat$BUsed_Flowers
resourceMatrix<-indat %>% group_by(jBird,jPlant,jTime) %>% summarize(v=mean(scaledR))  %>% acast(jBird ~ jPlant ~ jTime,value.var='v',fill=0)
save.image("Observed.Rdata")
m<-glm(data=indat,Yobs~Traitmatch*scaledR,family="binomial")
summary(m)
ggplot(indat,aes(x=Traitmatch,y=Yobs,col=FlowerA)) + facet_wrap(~Hummingbird,ncol=4) + geom_point() + geom_smooth(method = "glm",method.args=list(family="binomial")) + scale_color_continuous(low='blue',high='red')
ggplot(indat,aes(x=Traitmatch,y=Yobs,col=scaledR)) + facet_wrap(~Hummingbird,ncol=4) + geom_point() + geom_smooth(method = "glm",method.args=list(family="binomial")) + scale_color_continuous(low='blue',high='red')
ggplot(indat,aes(x=Traitmatch,y=Yobs,col=as.factor(scaledR))) + facet_wrap(~Hummingbird,ncol=4) + geom_point() + geom_smooth(method = "glm",method.args=list(family="binomial")) + scale_color_continuous("Resource Availability",low='blue',high='red')
ggplot(indat,aes(x=Traitmatch,y=Yobs,col=as.factor(scaledR))) + facet_wrap(~Hummingbird,ncol=4) + geom_point() + geom_smooth(method = "glm",method.args=list(family="binomial")) + scale_color_discrete("Resource Availability",low='blue',high='red')
ggplot(indat,aes(x=Traitmatch,y=Yobs,col=as.factor(scaledR))) + facet_wrap(~Hummingbird,ncol=4) + geom_point() + geom_smooth(method = "glm",method.args=list(family="binomial")) + scale_color_manual("Resource Availability",values=c('blue','red')
ggplot(indat,aes(x=Traitmatch,y=Yobs,col=as.factor(scaledR))) + facet_wrap(~Hummingbird,ncol=4) + geom_point() + geom_smooth(method = "glm",method.args=list(family="binomial")) + scale_color_manual("Resource Availability",values=c('blue','red'))
m<-glm(data=indat,Yobs~Traitmatch*scaledR,family="binomial")
summary(m)
source('~/.active-rstudio-document', echo=TRUE)
head(pars_detecr)
head(pars_detect)
group_by(pars_detect,species,par) %>% filter(par %in% c('dcam'|'dtrans'))
group_by(pars_detect,species,par) %>% filter(par %in% c('dcam'|'dtrans')) %>% summarize(mean=mean(estimate),lower=quantile(estimate,0.05),upper=quantile(estimate,0.95))
group_by(pars_detect,species,par) %>% filter(par %in% c('dcam','dtrans')) %>% summarize(mean=mean(estimate),lower=quantile(estimate,0.05),upper=quantile(estimate,0.95))
source('~/.active-rstudio-document', echo=TRUE)
Yobs_transect[[11]]
Yobs_transect[11]]
Yobs_transect[11]
indat$Camera
indat$Transect
resourceMatrix
table(resourceMatrix)
table(indat$scaledR)
system.time(m2<-jags.parallel(data=Dat,parameters.to.save =ParsStage,inits=InitStage,model.file="Bayesian/NmixturePoissonRagged2m.jags",n.thin=2,n.iter=30000,n.burnin=29500,n.chains=2,DIC=F))
initB<-rep(0.5,Birds)
initB
#Source model
source("Bayesian/NmixturePoissonRagged2m.R")
#print model
writeLines(readLines("Bayesian/NmixturePoissonRagged2m.R"))
#Inits
InitStage <- function(){
#A blank Y matrix - all present
initY<-array(dim=c(Birds,Plants,Times),1)
initB<-rep(0.5,Birds)
list(S=initY,dcam=initB,dtrans=initB,dcam=initB)}
#Parameters to track
ParsStage <- c("alpha","beta1","beta2","beta3","alpha_mu","alpha_sigma","beta1_sigma","beta1_mu","beta2_mu","beta2_sigma","beta3_mu","beta3_sigma","dtrans","dcam","dprior_cam","dprior_trans")
#Jags Data
Dat<-list(
Yobs_camera = indat$Camera,
Yobs_transect = indat$Transect,
Birds=max(indat$jBird),
Bird=indat$jBird,
Plant=indat$jPlant,
Time=indat$jTime,
Plants=max(indat$jPlant),
Times=max(indat$jTime),
resources=resourceMatrix,
Nobs=nrow(indat),
cam_surveys= (indat$Survey_Type=="Camera")*1,
trans_surveys= (indat$Survey_Type=="Transect")*1,
Traitmatch=jTraitmatch)
#MCMC options
system.time(m2<-jags.parallel(data=Dat,parameters.to.save =ParsStage,inits=InitStage,model.file="Bayesian/NmixturePoissonRagged2m.jags",n.thin=2,n.iter=30000,n.burnin=29500,n.chains=2,DIC=F))
#Source model
source("Bayesian/NmixturePoissonRagged2m.R")
#print model
writeLines(readLines("Bayesian/NmixturePoissonRagged2m.R"))
#Inits
InitStage <- function(){
#A blank Y matrix - all present
initY<-array(dim=c(Birds,Plants,Times),1)
initB<-rep(0.5,Birds)
list(S=initY,dcam=initB,dtrans=initB,dtrans=initB)}
#Parameters to track
ParsStage <- c("alpha","beta1","beta2","beta3","alpha_mu","alpha_sigma","beta1_sigma","beta1_mu","beta2_mu","beta2_sigma","beta3_mu","beta3_sigma","dtrans","dcam","dprior_cam","dprior_trans")
#Jags Data
Dat<-list(
Yobs_camera = indat$Camera,
Yobs_transect = indat$Transect,
Birds=max(indat$jBird),
Bird=indat$jBird,
Plant=indat$jPlant,
Time=indat$jTime,
Plants=max(indat$jPlant),
Times=max(indat$jTime),
resources=resourceMatrix,
Nobs=nrow(indat),
cam_surveys= (indat$Survey_Type=="Camera")*1,
trans_surveys= (indat$Survey_Type=="Transect")*1,
Traitmatch=jTraitmatch)
#MCMC options
system.time(m2<-jags.parallel(data=Dat,parameters.to.save =ParsStage,inits=InitStage,model.file="Bayesian/NmixturePoissonRagged2m.jags",n.thin=2,n.iter=30000,n.burnin=29500,n.chains=2,DIC=F))
#Source model
source("Bayesian/NmixturePoissonRagged2m.R")
#print model
writeLines(readLines("Bayesian/NmixturePoissonRagged2m.R"))
#Inits
InitStage <- function(){
#A blank Y matrix - all present
initY<-array(dim=c(Birds,Plants,Times),1)
initB<-rep(0.5,Birds)
list(S=initY,dcam=initB,dtrans=initB)}
#Parameters to track
ParsStage <- c("alpha","beta1","beta2","beta3","alpha_mu","alpha_sigma","beta1_sigma","beta1_mu","beta2_mu","beta2_sigma","beta3_mu","beta3_sigma","dtrans","dcam","dprior_cam","dprior_trans")
#Jags Data
Dat<-list(
Yobs_camera = indat$Camera,
Yobs_transect = indat$Transect,
Birds=max(indat$jBird),
Bird=indat$jBird,
Plant=indat$jPlant,
Time=indat$jTime,
Plants=max(indat$jPlant),
Times=max(indat$jTime),
resources=resourceMatrix,
Nobs=nrow(indat),
cam_surveys= (indat$Survey_Type=="Camera")*1,
trans_surveys= (indat$Survey_Type=="Transect")*1,
Traitmatch=jTraitmatch)
#MCMC options
system.time(m2<-jags.parallel(data=Dat,parameters.to.save =ParsStage,inits=InitStage,model.file="Bayesian/NmixturePoissonRagged2m.jags",n.thin=2,n.iter=30000,n.burnin=29500,n.chains=2,DIC=F))
pars_detect<-extract_par(m2,data=indat,Bird="jBird",Plant="jPlant")
ggplot(pars_detect[pars_detect$par %in% c("alpha","beta1","beta2","beta3"),],aes(x=Draw,y=estimate,col=as.factor(Chain))) + geom_line() + facet_grid(par~species,scale="free") + theme_bw() + labs(col="Chain") + ggtitle("Species Level")
ggplot(pars_detect[pars_detect$par %in% c("dcam","dtrans"),],aes(x=Draw,y=estimate,col=as.factor(Chain))) + geom_line() + facet_wrap(species~par,scale="free",ncol=1) + theme_bw() + labs(col="Chain") + ggtitle("Species Level")
ggplot(pars_detect[pars_detect$par %in% c("dcam","dtrans"),],aes(x=Draw,y=estimate,col=as.factor(Chain))) + geom_line() + facet_wrap(species~par,scale="free",ncol=5) + theme_bw() + labs(col="Chain") + ggtitle("Species Level")
ggplot(pars_detect[pars_detect$par %in% c("dcam","dtrans"),],aes(x=Draw,y=estimate,col=as.factor(Chain))) + geom_line() + facet_grid(species~par,scale="free",ncol=5) + theme_bw() + labs(col="Chain") + ggtitle("Species Level")
ggplot(pars_detect[pars_detect$par %in% c("dcam","dtrans"),],aes(x=Draw,y=estimate,col=as.factor(Chain))) + geom_line() + facet_grid(species~par,scale="free") + theme_bw() + labs(col="Chain") + ggtitle("Species Level")
ggplot(pars_detect[pars_detect$par %in% c("dcam_prior","dtrans_prior","beta1_mu","beta1_sigma","beta2_mu","beta2_sigma","beta3_mu","beta3_sigma","alpha_mu","alpha_sigma"),],aes(x=Draw,y=estimate,col=as.factor(Chain))) + geom_line() + theme_bw() + labs(col="Chain") + ggtitle("Group Level Parameters") + facet_wrap(~par,scales="free")
ggplot(pars_detect[pars_detect$par %in% c("alpha","beta1","beta2","beta3"),],aes(x=estimate)) + geom_histogram(position='identity') +  facet_grid(species~par,scales="free") + theme_bw() + ggtitle("Species Parameters")
ggplot(pars_detect[pars_detect$par %in% c("dtrans","dcam"),],aes(x=par,y=estimate)) + geom_violin(fill='black') + theme_bw() + ggtitle("Detection Probability") + scale_x_discrete(labels=c("Camera","Transect")) + facet_wrap(~species)
jagsIndexBird
pars_detect<-merge(pars_detect,jagsIndexBird,by.x="species",by.y="jBird")
dim(pars_detect)
tail(pars_detect)
?merge
ggplot(pars_detect[pars_detect$par %in% c("dtrans","dcam"),],aes(x=par,y=estimate)) + geom_violin(fill='black') + theme_bw() + ggtitle("Detection Probability") + scale_x_discrete(labels=c("Camera","Transect")) + facet_wrap(~species)
pars_detect<-extract_par(m2,data=indat,Bird="jBird",Plant="jPlant")
detecttable<-group_by(pars_detect,Hummingbird,par) %>% filter(par %in% c('dcam','dtrans')) %>% summarize(mean=mean(estimate),lower=quantile(estimate,0.05),upper=quantile(estimate,0.95))
pars_detect<-merge(pars_detect,jagsIndexBird,by.x="species",by.y="jBird",all=T)
ggplot(pars_detect[pars_detect$par %in% c("dtrans","dcam"),],aes(x=par,y=estimate)) + geom_violin(fill='black') + theme_bw() + ggtitle("Detection Probability") + scale_x_discrete(labels=c("Camera","Transect")) + facet_wrap(~species)
ggplot(pars_detect[pars_detect$par %in% c("dtrans","dcam"),],aes(x=par,y=estimate)) + geom_violin(fill='black') + theme_bw() + ggtitle("Detection Probability") + scale_x_discrete(labels=c("Camera","Transect")) + facet_wrap(~Hummingbird)
ggplot(pars_detect[pars_detect$par %in% c("beta3_mu","beta3_sigma","beta2_mu","beta2_sigma","beta1_mu","beta1_sigma","alpha_mu","alpha_sigma","dprior_cam","dprior_trans"),],aes(x=estimate)) + geom_histogram() + ggtitle("Group Level Posteriors") + facet_wrap(~par,scale="free",nrow=2) + theme_bw()
castdf<-dcast(pars_detect[pars_detect$par %in% c("beta1_mu","beta2_mu","beta3_mu","alpha_mu"),], Chain + Draw~par,value.var="estimate")
predy<-trajF(alpha=castdf$alpha_mu,beta1=castdf$beta1_mu,x=indat$Traitmatch,resources=indat$scaledR,beta2=castdf$beta2_mu,beta3=castdf$beta3_mu,type='quantile')
ggplot(data=predy,aes(x=x)) + geom_ribbon(aes(ymin=lower,ymax=upper),alpha=0.4,fill="red")  +  theme_bw() + ylab("Interactions") + xlab("Difference between Bill and Corolla Length") + geom_point(data=indat,aes(x=Traitmatch,y=Camera)) + geom_line(aes(y=mean)) + geom_point(data=indat,aes(x=Traitmatch,y=Transect))
#Trajectories from posterior
predH<-trajF(alpha=castdf$alpha_mu,beta1=castdf$beta1_mu,x=indat[indat$BUsed_Flowers==1,"Traitmatch"],resources=indat[indat$ BUsed_Flowers==1,"scaledR"],beta2=castdf$beta2_mu,beta3=castdf$beta3_mu,type='quantile')
predL<-trajF(alpha=castdf$alpha_mu,beta1=castdf$beta1_mu,x=indat[indat$BUsed_Flowers==0,"Traitmatch"],resources=indat[indat$ BUsed_Flowers==0,"scaledR"],beta2=castdf$beta2_mu,beta3=castdf$beta3_mu,type='quantile')
predhl<-melt(list(High=predH,Low=predL),id.vars=colnames(predH))
colnames(predhl)[5]<-"BFlowerL"
indat$BFlowerL<-factor(as.character(indat$BUsed_Flowers))
levels(indat$BFlowerL)<-c("Low","High")
ggplot(data=predhl,aes(x=x)) + geom_ribbon(aes(ymin=lower,ymax=upper,fill=BFlowerL),alpha=0.2)  + geom_line(aes(y=mean,col=BFlowerL),size=.8) + theme_bw() + ylab("Interactions") + xlab("Difference between Bill and Corolla Length") + geom_point(data=mindat,aes(x=Traitmatch,y=value))+ labs(fill="Resource Availability",col="Resource Availability")
ggsave("Figures/AllRegression.jpeg",height=5,width=7)
castdf<-dcast(pars_detect[pars_detect$par %in% c("beta1","beta2","beta3","alpha"),], species +Chain +Draw ~par ,value.var="estimate")
#Turn to
castdf$species<-factor(castdf$species,levels=1:max(as.numeric(castdf$species)))
species.split<-split(castdf,list(castdf$species),drop = T)
species.traj<-list()
for(d in 1:length(species.split)){
x<-species.split[[d]]
index<-unique(x$species)
#get data for those species
billd<-indat[indat$jBird %in% index,]
#scale resources
species.traj[[d]]<-trajF(alpha=x$alpha,beta1=x$beta1,beta2=x$beta2,beta3=x$beta3,resources=billd$scaledR,x=billd$Traitmatch,type='quantile')
}
names(species.traj)<-names(species.split)
species.traj<-melt(species.traj,id.var=colnames(species.traj[[1]]))
#split out names and model
species.traj[,c("Index")]<-colsplit(species.traj$L1,"\\.",c("Index"))
spe<-merge(species.traj,jagsIndexBird,by.x="Index",by.y="jBird")
#plot and compare to original data
ggplot(data=spe,aes(x=x)) + geom_ribbon(aes(ymin=lower,ymax=upper),alpha=0.2,fill='red') + geom_line(aes(y=mean),size=.5) + theme_bw() + ylab("Occurrence Probability")+ xlab("Difference between Bill and Corolla Length") + facet_wrap(~Hummingbird,scales="free",ncol=4) + geom_point(data=mindat,aes(x=Traitmatch,y=value,shape=variable),size=2.5) + labs(shape="Sampling Method")
castdf<-dcast(pars_detect[pars_detect$par %in% c("beta1","beta2","beta3","alpha"),], species +Chain +Draw ~par ,value.var="estimate")
#Turn to
castdf$species<-factor(castdf$species,levels=1:max(as.numeric(castdf$species)))
species.split<-split(castdf,list(castdf$species),drop = T)
species.traj<-list()
for(d in 1:length(species.split)){
x<-species.split[[d]]
index<-unique(x$species)
#get data for those species
billd<-indat[indat$jBird %in% index,]
sl<-trajF(alpha=x$alpha,beta1=x$beta1,beta2=x$beta2,beta3=x$beta3,resources=billd[billd$BUsed_Flowers==0,"scaledR"],x=billd[billd$ BUsed_Flowers==0,"Traitmatch"],type='quantile')
sh<-trajF(alpha=x$alpha,beta1=x$beta1,beta2=x$beta2,beta3=x$beta3,resources=billd[billd$BUsed_Flowers==1,"scaledR"],x=billd[billd$ BUsed_Flowers==1,"Traitmatch"],type='quantile')
sm<-melt(list(High=sh,Low=sl),id.vars=colnames(sl))
colnames(sm)[5]<-"Resources"
species.traj[[d]]<-sm
}
names(species.traj)<-names(species.split)
species.traj<-melt(species.traj,id.var=colnames(species.traj[[1]]))
#split out names and model
species.traj[,c("Index")]<-colsplit(species.traj$L1,"\\.",c("Index"))
spe<-merge(species.traj,jagsIndexBird,by.x="Index",by.y="jBird")
#plot and compare to original data
ggplot(data=spe,aes(x=x)) + geom_ribbon(aes(ymin=lower,ymax=upper,fill=Resources),alpha=0.2) + geom_line(aes(y=mean,col=Resources),size=.5) + theme_bw() + ylab("Occurrence Probability")+ xlab("Difference between Bill and Corolla Length") + facet_wrap(~Hummingbird,scales="free",ncol=3) + geom_point(data=mindat,aes(x=Traitmatch,y=value,shape=variable),size=1.5,alpha=.5)
ggsave("Figures/SpeciesRegression.jpeg",height=6,width=7)
castdf<-dcast(pars_detect[pars_detect$par %in% c("beta1","beta2","beta3","alpha"),], species +Chain + Draw~par,value.var="estimate")
#Turn to
castdf$species<-factor(castdf$species,levels=1:max(as.numeric(castdf$species)))
species.split<-split(castdf,list(castdf$species),drop = T)
species.traj<-list()
for(d in 1:length(species.split)){
dat<-species.split[[d]]
index<-unique(dat$species)
#get data for those species
billd<-mindat[mindat$jBird %in% index,]
#Calculate interaction effect
species.traj[[d]]<-intF(alpha=dat$alpha,beta1=dat$beta1,x=billd[billd$value > 0 & !is.na(billd$value),'Traitmatch'],resources=billd[billd$value > 0 & !is.na(billd$value),'scaledR'],beta2=dat$beta2,beta3=dat$beta3,type='quantile')
}
names(species.traj)<-names(species.split)
species.traj<-melt(species.traj,id.var=colnames(species.traj[[1]]))
#split out names and model
species.traj[,c("Index")]<-colsplit(species.traj$L1,"\\.",c("Index"))
spe<-merge(species.traj,jagsIndexBird,by.x="Index",by.y="jBird")
#match colnames
#plot and compare to original data
ggplot(data=spe,aes(x=x)) + geom_ribbon(aes(ymin=lower,ymax=upper,fill=Hummingbird),alpha=0.3) + geom_line(aes(y=mean,col=Hummingbird),size=1) + theme_bw() + xlab("Difference between Bill and Corolla Length")  + ylab("Effect of Resources on Trait Difference") + facet_wrap(~Hummingbird,scales="free",ncol=3)
ggsave("Figures/SpeciesInteraction.jpeg",height=6,width=7)
post<-pars_detect %>% filter(par %in% "beta3") %>% group_by(species) %>% summarize(mean=mean(estimate),median=median(estimate),lower=quantile(probs=0.025,estimate),upper=quantile(probs=0.975,estimate),quantile_l=quantile(estimate)[[1]],quantile_u=quantile(estimate)[[2]]) %>% melt(id.vars='species')
ggplot(pars_detect[pars_detect$par %in% "beta3",],aes(x=estimate)) + geom_histogram() + facet_wrap(~species,scales='free',ncol=3) + geom_vline(data=post,aes(xintercept=value,col=variable))
post<-pars_detect %>% filter(par %in% "beta3") %>% group_by(species) %>% summarize(mean=mean(estimate),median=median(estimate),lower=quantile(probs=0.025,estimate),upper=quantile(probs=0.975,estimate)) %>% melt(id.vars='species')
ggplot(pars_detect[pars_detect$par %in% "beta3",],aes(x=estimate)) + geom_histogram() + facet_wrap(~species,scales='free',ncol=3) + geom_vline(data=post,aes(xintercept=value,col=variable))
ggplot(pars_detect[pars_detect$par %in% "beta3",],aes(x=estimate)) + geom_histogram() + facet_wrap(~Hummingbird,scales='free',ncol=3) + geom_vline(data=post,aes(xintercept=value,col=variable))
post<-pars_detect %>% filter(par %in% "beta3") %>% group_by(Hummingbird) %>% summarize(mean=mean(estimate),median=median(estimate),lower=quantile(probs=0.025,estimate),upper=quantile(probs=0.975,estimate)) %>% melt(id.vars='species')
ggplot(pars_detect[pars_detect$par %in% "beta3",],aes(x=estimate)) + geom_histogram() + facet_wrap(~Hummingbird,scales='free',ncol=4) + geom_vline(data=post,aes(xintercept=value,col=variable))
post<-pars_detect %>% filter(par %in% "beta3") %>% group_by(Hummingbird) %>% summarize(mean=mean(estimate),median=median(estimate),lower=quantile(probs=0.025,estimate),upper=quantile(probs=0.975,estimate)) %>% melt(id.vars='Hummingbird')
ggplot(pars_detect[pars_detect$par %in% "beta3",],aes(x=estimate)) + geom_histogram() + facet_wrap(~Hummingbird,scales='free',ncol=4) + geom_vline(data=post,aes(xintercept=value,col=variable))
#species names
b<-pars_detect[pars_detect$par %in% "beta1",]
b<-merge(b,jagsIndexBird,by.x="species",by.y="jBird")
#traits
b<-merge(b,hum.morph,by.x="Hummingbird",by.y="English")
post<-b %>% filter(par %in% "beta1") %>% group_by(Hummingbird) %>% summarize(mean=mean(estimate),median=median(estimate),lower=quantile(probs=0.025,estimate),upper=quantile(probs=0.975,estimate),quantile_l=quantile(estimate)[[1]],quantile_u=quantile(estimate)[[2]]) %>% melt(id.vars='Hummingbird')
#get order of mean posterior
ord<-post %>% filter(variable=="mean") %>% arrange(value) %>% .$Hummingbird
b$Hummingbird<-factor(b$Hummingbird,levels=ord)
ggplot(b,aes(y=estimate,x=Hummingbird,fill=Total_Culmen)) + geom_violin() + coord_flip() + scale_fill_continuous(low='blue',high='red') + ggtitle("Traitmatching and Bill Length") + theme_bw()
b<-pars_detect[pars_detect$par %in% "beta1",]
b<-merge(b,hum.morph,by.x="Hummingbird",by.y="English")
post<-b %>% filter(par %in% "beta1") %>% group_by(Hummingbird) %>% summarize(mean=mean(estimate),median=median(estimate),lower=quantile(probs=0.025,estimate),upper=quantile(probs=0.975,estimate),quantile_l=quantile(estimate)[[1]],quantile_u=quantile(estimate)[[2]]) %>% melt(id.vars='Hummingbird')
#get order of mean posterior
ord<-post %>% filter(variable=="mean") %>% arrange(value) %>% .$Hummingbird
b$Hummingbird<-factor(b$Hummingbird,levels=ord)
ggplot(b,aes(y=estimate,x=Hummingbird,fill=Total_Culmen)) + geom_violin() + coord_flip() + scale_fill_continuous(low='blue',high='red') + ggtitle("Traitmatching and Bill Length") + theme_bw()
head(b)
ggplot(b,aes(y=estimate,x=Total_Culmen)) + geom_violin() + coord_flip() + scale_fill_continuous(low='blue',high='red') + ggtitle("Traitmatching and Bill Length") + theme_bw()
ggplot(b,aes(y=estimate,x=Total_Culmen,groups=Hummingbird)) + geom_violin() + coord_flip() + scale_fill_continuous(low='blue',high='red') + ggtitle("Traitmatching and Bill Length") + theme_bw()
ggplot(b,aes(y=estimate,x=Total_Culmen,group=Hummingbird)) + geom_violin() + coord_flip() + scale_fill_continuous(low='blue',high='red') + ggtitle("Traitmatching and Bill Length") + theme_bw()
ggplot(b,aes(x=estimate,y=Total_Culmen,group=Hummingbird)) + geom_violin() + coord_flip() + scale_fill_continuous(low='blue',high='red') + ggtitle("Traitmatching and Bill Length") + theme_bw()
ggplot(b,aes(x=estimate,y=as.factor(Total_Culmen),group=Hummingbird)) + geom_violin() + coord_flip() + scale_fill_continuous(low='blue',high='red') + ggtitle("Traitmatching and Bill Length") + theme_bw()
post
ggplot(b,aes(x=estimate,y=as.factor(Total_Culmen),group=Hummingbird)) + geom_violin() + coord_flip() + scale_fill_continuous(low='blue',high='red') + ggtitle("Traitmatching and Bill Length") + theme_bw()
ggplot(b,aes(x=estimate,y=as.factor(Total_Culmen))) + geom_violin() + coord_flip() + scale_fill_continuous(low='blue',high='red') + ggtitle("Traitmatching and Bill Length") + theme_bw()
ggplot(b,aes(y=estimate,x=as.factor(Total_Culmen))) + geom_violin() + coord_flip() + scale_fill_continuous(low='blue',high='red') + ggtitle("Traitmatching and Bill Length") + theme_bw()
ggplot(b,aes(y=estimate,x=Total_Culmen,fill=Hummingbird)) + geom_violin() + coord_flip() + scale_fill_continuous(low='blue',high='red') + ggtitle("Traitmatching and Bill Length") + theme_bw()
ggplot(b,aes(y=estimate,x=Total_Culmen,fill=Hummingbird)) + geom_violin() + coord_flip()  + ggtitle("Traitmatching and Bill Length") + theme_bw()
ggplot(b,aes(y=estimate,x=Total_Culmen)) + geom_violin() + coord_flip()  + ggtitle("Traitmatching and Bill Length") + theme_bw()
ggplot(b,aes(y=estimate,x=Total_Culmen,group=Hummingbird)) + geom_violin() + coord_flip()  + ggtitle("Traitmatching and Bill Length") + theme_bw()
ggplot(b,aes(y=estimate,x=as.factor(Total_Culmen),group=Hummingbird)) + geom_violin() + coord_flip()  + ggtitle("Traitmatching and Bill Length") + theme_bw()
ggplot(b,aes(y=estimate,x=as.factor(Total_Culmen),group=Hummingbird),fill='grey50') + geom_violin() + coord_flip()  + ggtitle("Traitmatching and Bill Length") + theme_bw()
ggplot(b,aes(y=estimate,x=as.factor(Total_Culmen),group=Hummingbird)) + geom_violin(fill='grey50') + coord_flip()  + ggtitle("Traitmatching and Bill Length") + theme_bw()
ggplot(b,aes(y=estimate,x=as.factor(Total_Culmen),group=Hummingbird)) + geom_violin(fill='grey50') + coord_flip()  + ggtitle("Trait-matching and Bill Length") + theme_bw()
b<-pars_detect[pars_detect$par %in% "beta3",]
b<-merge(b,hum.morph,by.x="Hummingbird",by.y="English")
post<-b %>% filter(par %in% "beta3") %>% group_by(Hummingbird) %>% summarize(mean=mean(estimate),median=median(estimate),lower=quantile(probs=0.025,estimate),upper=quantile(probs=0.975,estimate),quantile_l=quantile(estimate)[[1]],quantile_u=quantile(estimate)[[2]]) %>% melt(id.vars='Hummingbird')
#get order of mean posterior
ord<-post %>% filter(variable=="mean") %>% arrange(value) %>% .$Hummingbird
b$Hummingbird<-factor(b$Hummingbird,levels=ord)
ggplot(b,aes(y=estimate,x=Hummingbird,fill=Total_Culmen)) + geom_violin() + coord_flip() + scale_fill_continuous(low='blue',high='red') + ggtitle("Interaction Effect and Bill Length") + theme_bw()
castdf<-dcast(pars_detect[pars_detect$par %in% c("beta1","beta2","beta3","alpha"),], species +Chain + Draw~par,value.var="estimate")
castdf$species<-factor(castdf$species,levels=1:max(as.numeric(castdf$species)))
species.split<-split(castdf,list(castdf$species),drop = T)
species.traj<-lapply(species.split,function(dat){
index<-unique(dat$species)
#get data for those species
billd<-indat[indat$jBird %in% index,]
d<-data.frame(alpha=dat$alpha,beta1=dat$beta1,beta2=dat$beta2,beta3=dat$beta3)
#fit regression for each input estimate
sampletraj<-list()
for (y in 1:nrow(d)){
v=inv.logit(d$alpha[y] + d$beta1[y] * billd$Traitmatch + d$beta2[y] * billd$scaledR + d$beta3[y] * billd$Traitmatch*billd$scaledR)
sampletraj[[y]]<-data.frame(x=as.numeric(billd$Traitmatch),y=as.numeric(v),r=as.numeric(billd$scaledR),jBird=billd$jBird,jPlant=billd$jPlant,jTime=billd$jTime)
}
sample_all<-rbind_all(sampletraj)
})
species.traj<-rbind_all(species.traj)
```
species.mean<-species.traj %>% group_by(jBird,jPlant,r) %>% summarize(Traitmatch=unique(x),phi=mean(y))
species.mean<-merge(species.mean,indat[,colnames(indat) %in% c("jBird","jPlant","jTime","Hummingbird","Iplant_Double")])
#get corolla sizes
species.mean<-merge(species.mean,fl.morph,by.x="Iplant_Double", by.y="Group.1")
#bill order
ord<-hum.morph %>% arrange(Total_Culmen) %>% .$English
species.mean$Hummingbird<-factor(species.mean$Hummingbird,levels=ord)
#add level to hum.morph to match naming convention
species.mean<-merge(species.mean,hum.morph[,c("English","Total_Culmen")],by.x="Hummingbird",by.y="English")
p<-ggplot(species.mean,aes(x=TotalCorolla,y=phi,col=as.factor(r))) + geom_line(size=.9) + geom_vline(aes(xintercept=Total_Culmen),linetype='dashed') + facet_wrap(~Hummingbird,ncol=3,scales="free_y")  + theme_bw() + ylab("Probability of Interaction") + scale_color_manual("Resource Availability",labels=c("Low","High"),values=c("Blue","Red")) + xlab("Flower Corolla Length (mm)")
p
ggsave("Figures/ResponseCurves.jpeg",height=6.5,width=9)
species.mean<-species.traj %>% group_by(jBird,jPlant,r) %>% summarize(Traitmatch=unique(x),phi=mean(y),phi_low=quantile(y,0.05),phi_high=quantile(y,0.95))
#merge names
species.mean<-merge(species.mean,jagsIndexBird)
species.mean<-merge(species.mean,jagsIndexPlants)
#get corolla sizes
species.mean<-merge(species.mean,fl.morph,by.x="Iplant_Double", by.y="Group.1")
#bill order
ord<-hum.morph %>% arrange(Total_Culmen) %>% .$English
species.mean$Hummingbird<-factor(species.mean$Hummingbird,levels=ord)
#add level to hum.morph to match naming convention
species.mean<-merge(species.mean,hum.morph[,c("English","Total_Culmen")],by.x="Hummingbird",by.y="English")
ggplot(species.mean) + geom_ribbon(alpha=0.4,aes(x=TotalCorolla,ymin=phi_low,ymax=phi_high,fill=as.factor(r))) + theme_bw() + facet_wrap(~Hummingbird,scales="free",ncol=4)+ ggtitle("Niche Breadth") + geom_vline(aes(xintercept=Total_Culmen),linetype='dashed') + geom_line(aes(x=TotalCorolla,y=phi,fill=as.factor(r))) + ylab("Probability of Interaction") + xlab("Corolla Length (mm)") + scale_fill_discrete("Resource Availability") + ylim(0,1)
ggsave("Figures/NicheBreadth.jpeg",height=6,width=9)
indat %>% filter(Hummingbird=="Stripe_throated Hermit")
indat %>% filter(Hummingbird=="Stripe-throated Hermit")
a<-indat %>% filter(Hummingbird=="Stripe-throated Hermit")
head(a)
table(a$Year)
table(a$Yobs)
ggplot(a,aes(x=Traitmatch,y=Yobs)) + geom_point() + geom_smooth(method='glm',method.args=list(family="binomial"))
#Split by resource
nsplit<-split(species.mean,species.mean$r)
makeN<-function(x){
#input matrix
aggm<-matrix(nrow=nrow(jagsIndexBird),ncol=nrow(jagsIndexPlants),data=0)
for (j in 1:nrow(x)){
aggm[x[j,"jBird"],x[j,"jPlant"]]<-rbinom(1,1,prob=x[j,"phi"])
}
#calculate network statistic
nstat<-networklevel(aggm,index=c("connectance","nestedness"))
}
nstat<-lapply(nsplit,function(x){
netstat<-melt(t(sapply(1:500,function(k) makeN(x))))
colnames(netstat)<-c("Iteration","Metric","value")
return(netstat)
})
names(nstat)<-c("Low","High")
nstat<-melt(nstat,colnames(nstat[[1]]))
ggplot(nstat,aes(x=value,fill=L1)) + geom_density(alpha=0.6) + facet_wrap(~Metric,scales='free',nrow=2) + scale_fill_discrete("Resource Availability")
?networklevel
(indat$Month %in% c("6,7,8,9,10"))*1
indat$Month
(indat$Month ==c("6,7,8,9,10")
)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(reshape2)
library(foreach)
library(doSNOW)
library(chron)
library(ggplot2)
library(knitr)
library(R2jags)
library(dplyr)
library(stringr)
library(gridExtra)
library(boot)
library(picante)
library(bipartite)
opts_chunk$set(message=FALSE,warning=FALSE,fig.width=10,fig.height=7,echo=TRUE,cache=F,fig.align='center',fig.path="figureObserved/")
set.seed(3)
#source functions
source("Bayesian/BayesFunctions.R")
ggplot(indat[indat$Yobs==1,],aes(x=Traitmatch,fill=as.factor(scaledR))) + facet_wrap(~Hummingbird,ncol=4,scales="free") + geom_density(alpha=.7)
load("Observed.RData")
library(reshape2)
library(foreach)
library(doSNOW)
library(chron)
library(ggplot2)
library(knitr)
library(R2jags)
library(dplyr)
library(stringr)
library(gridExtra)
library(boot)
library(picante)
library(bipartite)
library(VennDiagram)
opts_chunk$set(message=FALSE,warning=FALSE,fig.width=10,fig.height=7,echo=TRUE,cache=F,fig.align='center',fig.path="figureObserved/")
set.seed(3)
load("Observed.RData")
head(species.mean)
ggplot(species.mean,aes(x=phi,y=phi)) + geom_line()
ggplot(species.mean,aes(x=TotalCorolla,y=phi)) + geom_line()
ggplot(species.mean,aes(x=TotalCorolla,y=phi,col=Hummingbird)) + geom_line()
ggplot(species.mean,aes(x=TotalCorolla,y=phi,col=Hummingbird)) + geom_boxplot()
ggplot(species.mean,aes(x=TotalCorolla,y=phi,col=Hummingbird)) + geom_line()
ggplot(species.mean,aes(x=TotalCorolla,y=phi,col=Hummingbird)) + geom_density()
ggplot(species.mean,aes(x=TotalCorolla,y=phi,col=Hummingbird)) + geom_bar()
ggplot(species.mean,aes(x=TotalCorolla,x=Hummingbird)) + geom_bar()
ggplot(species.mean,aes(y=TotalCorolla,x=Hummingbird)) + geom_bar()
ggplot(species.mean,aes(y=TotalCorolla,x=Hummingbird)) + geom_density()
ggplot(species.mean) + geom_density(aes(y=TotalCorolla,x=Hummingbird))
ggplot(species.mean) + geom_density(aes(x=TotalCorolla)) + facet_wrap(~Hummingbird)
ggplot(species.mean) + geom_density(aes(x=TotalCorolla)) + facet_wrap(~Hummingbird,scales="free")
ggplot(species.mean) + geom_density(aes(x=TotalCorolla),fill="black") + facet_wrap(~Hummingbird,scales="free")
ggplot(species.mean) + geom_density(aes(x=TotalCorolla,col=r),fill="black") + facet_wrap(~Hummingbird,scales="free")
head(species.mean)
ggplot(species.mean) + geom_density(aes(x=TotalCorolla,col=as.factor(r),fill="black")) + facet_wrap(~Hummingbird,scales="free")
ggplot(species.mean) + geom_density(aes(x=TotalCorolla,col=as.factor(r))) + facet_wrap(~Hummingbird,scales="free")
ggplot(species.mean) + geom_density(aes(x=TotalCorolla,fill=as.factor(r))) + facet_wrap(~Hummingbird,scales="free")
ggplot(species.mean) + geom_density(aes(x=TotalCorolla,fill=as.factor(r)),alpha=0.7) + facet_wrap(~Hummingbird,scales="free")
ggplot(species.mean[species.mean$phi>0.5,]) + geom_density(aes(x=TotalCorolla,fill=as.factor(r)),alpha=0.7) + facet_wrap(~Hummingbird,scales="free")
ggplot(species.mean[species.mean$phi>0.5,]) + geom_density(aes(x=TotalCorolla,fill=as.factor(r)),alpha=0.7) + facet_wrap(~Hummingbird,scales="free")
